{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bruno\\\\Documents\\\\UNIR\\\\TFE\\\\EDUIA\\\\src\\\\components\\\\professor\\\\PDFUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { supabase } from '../../config/supabaseClient';\nimport { Document, Page, pdfjs } from 'react-pdf';\nimport 'react-pdf/dist/esm/Page/AnnotationLayer.css';\nimport 'react-pdf/dist/esm/Page/TextLayer.css';\nimport './PDFUpload.css';\n\n// Configurar el worker de PDF.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\npdfjs.GlobalWorkerOptions.workerSrc = `//unpkg.com/pdfjs-dist@3.11.174/build/pdf.worker.min.js`;\nconst PDFUpload = ({\n  subjectId,\n  session: sessionProp\n}) => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [uploadedFileUrl, setUploadedFileUrl] = useState(null);\n  const [numPages, setNumPages] = useState(null);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const handleFileChange = event => {\n    const selectedFile = event.target.files[0];\n    if (selectedFile && selectedFile.type === 'application/pdf') {\n      setFile(selectedFile);\n      setUploadedFileUrl(URL.createObjectURL(selectedFile));\n      setError(null);\n    } else {\n      setError('Por favor, selecciona un archivo PDF válido');\n      setFile(null);\n      setUploadedFileUrl(null);\n    }\n  };\n  const handleUpload = async () => {\n    if (!file || !title.trim()) {\n      setError('Debes seleccionar un PDF y escribir un título');\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    try {\n      // 1. Subir el archivo al backend (Express)\n      const formData = new FormData();\n      formData.append('file', file);\n      const uploadRes = await fetch('/upload', {\n        method: 'POST',\n        body: formData\n      });\n      if (!uploadRes.ok) throw new Error('Error al subir el archivo al servidor');\n      const {\n        fileUrl,\n        filePath\n      } = await uploadRes.json();\n\n      // 2. Obtener el usuario autenticado (opcional, si usas Supabase)\n      let userId = null;\n      if (sessionProp && sessionProp.user) {\n        userId = sessionProp.user.id;\n      } else {\n        const {\n          data: {\n            user\n          }\n        } = await supabase.auth.getUser();\n        userId = user === null || user === void 0 ? void 0 : user.id;\n      }\n\n      // 3. Guardar la información en la base de datos\n      const dbRes = await fetch('/api/files', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          title,\n          description,\n          subject_id: subjectId,\n          user_id: userId,\n          file_path: filePath,\n          file_url: fileUrl,\n          file_name: file.name,\n          file_type: file.type,\n          file_size: file.size\n        })\n      });\n      if (!dbRes.ok) throw new Error('Error al guardar la información en la base de datos');\n      setUploadedFileUrl(fileUrl);\n      setFile(null);\n      setTitle('');\n      setDescription('');\n    } catch (err) {\n      setError(err.message || 'Error al subir el archivo');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const onDocumentLoadSuccess = ({\n    numPages\n  }) => {\n    setNumPages(numPages);\n    setPageNumber(1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pdf-upload-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Subir Documento PDF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".pdf\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"T\\xEDtulo\",\n      value: title,\n      onChange: e => setTitle(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Descripci\\xF3n\",\n      value: description,\n      onChange: e => setDescription(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      disabled: loading,\n      children: loading ? 'Subiendo...' : 'Subir PDF'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 23\n    }, this), uploadedFileUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pdf-viewer\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Vista Previa del PDF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Document, {\n        file: uploadedFileUrl,\n        onLoadSuccess: onDocumentLoadSuccess,\n        loading: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Cargando PDF...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 34\n        }, this),\n        error: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Error al cargar el PDF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 32\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(Page, {\n          pageNumber: pageNumber,\n          scale: 1.2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"P\\xE1gina \", pageNumber, \" de \", numPages, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setPageNumber(p => Math.max(1, p - 1)),\n          disabled: pageNumber <= 1,\n          children: \"Anterior\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setPageNumber(p => Math.min(numPages, p + 1)),\n          disabled: pageNumber >= numPages,\n          children: \"Siguiente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n};\n_s(PDFUpload, \"zP3RMApVCGSEPOuGdWa3mnF8+ts=\");\n_c = PDFUpload;\nexport default PDFUpload;\nvar _c;\n$RefreshReg$(_c, \"PDFUpload\");","map":{"version":3,"names":["React","useState","supabase","Document","Page","pdfjs","jsxDEV","_jsxDEV","GlobalWorkerOptions","workerSrc","PDFUpload","subjectId","session","sessionProp","_s","file","setFile","title","setTitle","description","setDescription","uploadedFileUrl","setUploadedFileUrl","numPages","setNumPages","pageNumber","setPageNumber","loading","setLoading","error","setError","handleFileChange","event","selectedFile","target","files","type","URL","createObjectURL","handleUpload","trim","formData","FormData","append","uploadRes","fetch","method","body","ok","Error","fileUrl","filePath","json","userId","user","id","data","auth","getUser","dbRes","headers","JSON","stringify","subject_id","user_id","file_path","file_url","file_name","name","file_type","file_size","size","err","message","onDocumentLoadSuccess","className","children","fileName","_jsxFileName","lineNumber","columnNumber","accept","onChange","placeholder","value","e","onClick","disabled","onLoadSuccess","scale","p","Math","max","min","_c","$RefreshReg$"],"sources":["C:/Users/bruno/Documents/UNIR/TFE/EDUIA/src/components/professor/PDFUpload.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { supabase } from '../../config/supabaseClient';\r\nimport { Document, Page, pdfjs } from 'react-pdf';\r\nimport 'react-pdf/dist/esm/Page/AnnotationLayer.css';\r\nimport 'react-pdf/dist/esm/Page/TextLayer.css';\r\nimport './PDFUpload.css';\r\n\r\n// Configurar el worker de PDF.js\r\n\r\npdfjs.GlobalWorkerOptions.workerSrc = `//unpkg.com/pdfjs-dist@3.11.174/build/pdf.worker.min.js`;\r\n\r\nconst PDFUpload = ({ subjectId, session: sessionProp }) => {\r\n    const [file, setFile] = useState(null);\r\n    const [title, setTitle] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [uploadedFileUrl, setUploadedFileUrl] = useState(null);\r\n    const [numPages, setNumPages] = useState(null);\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const handleFileChange = (event) => {\r\n        const selectedFile = event.target.files[0];\r\n        if (selectedFile && selectedFile.type === 'application/pdf') {\r\n            setFile(selectedFile);\r\n            setUploadedFileUrl(URL.createObjectURL(selectedFile));\r\n            setError(null);\r\n        } else {\r\n            setError('Por favor, selecciona un archivo PDF válido');\r\n            setFile(null);\r\n            setUploadedFileUrl(null);\r\n        }\r\n    };\r\n\r\n    const handleUpload = async () => {\r\n        if (!file || !title.trim()) {\r\n            setError('Debes seleccionar un PDF y escribir un título');\r\n            return;\r\n        }\r\n        setLoading(true);\r\n        setError(null);\r\n\r\n        try {\r\n            // 1. Subir el archivo al backend (Express)\r\n            const formData = new FormData();\r\n            formData.append('file', file);\r\n\r\n            const uploadRes = await fetch('/upload', {\r\n                method: 'POST',\r\n                body: formData,\r\n            });\r\n\r\n            if (!uploadRes.ok) throw new Error('Error al subir el archivo al servidor');\r\n\r\n            const { fileUrl, filePath } = await uploadRes.json();\r\n\r\n            // 2. Obtener el usuario autenticado (opcional, si usas Supabase)\r\n            let userId = null;\r\n            if (sessionProp && sessionProp.user) {\r\n                userId = sessionProp.user.id;\r\n            } else {\r\n                const { data: { user } } = await supabase.auth.getUser();\r\n                userId = user?.id;\r\n            }\r\n\r\n            // 3. Guardar la información en la base de datos\r\n            const dbRes = await fetch('/api/files', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    title,\r\n                    description,\r\n                    subject_id: subjectId,\r\n                    user_id: userId,\r\n                    file_path: filePath,\r\n                    file_url: fileUrl,\r\n                    file_name: file.name,\r\n                    file_type: file.type,\r\n                    file_size: file.size,\r\n                }),\r\n            });\r\n\r\n            if (!dbRes.ok) throw new Error('Error al guardar la información en la base de datos');\r\n\r\n            setUploadedFileUrl(fileUrl);\r\n            setFile(null);\r\n            setTitle('');\r\n            setDescription('');\r\n        } catch (err) {\r\n            setError(err.message || 'Error al subir el archivo');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const onDocumentLoadSuccess = ({ numPages }) => {\r\n        setNumPages(numPages);\r\n        setPageNumber(1);\r\n    };\r\n\r\n    return (\r\n        <div className=\"pdf-upload-container\">\r\n            <h3>Subir Documento PDF</h3>\r\n            <input type=\"file\" accept=\".pdf\" onChange={handleFileChange} />\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Título\"\r\n                value={title}\r\n                onChange={e => setTitle(e.target.value)}\r\n            />\r\n            <textarea\r\n                placeholder=\"Descripción\"\r\n                value={description}\r\n                onChange={e => setDescription(e.target.value)}\r\n            />\r\n            <button onClick={handleUpload} disabled={loading}>\r\n                {loading ? 'Subiendo...' : 'Subir PDF'}\r\n            </button>\r\n            {error && <div className=\"error-message\">{error}</div>}\r\n\r\n            {uploadedFileUrl && (\r\n                <div className=\"pdf-viewer\">\r\n                    <h4>Vista Previa del PDF</h4>\r\n                    <Document\r\n                        file={uploadedFileUrl}\r\n                        onLoadSuccess={onDocumentLoadSuccess}\r\n                        loading={<div>Cargando PDF...</div>}\r\n                        error={<div>Error al cargar el PDF</div>}\r\n                    >\r\n                        <Page pageNumber={pageNumber} scale={1.2} />\r\n                    </Document>\r\n                    <div>\r\n                        Página {pageNumber} de {numPages}\r\n                        <button onClick={() => setPageNumber(p => Math.max(1, p - 1))} disabled={pageNumber <= 1}>Anterior</button>\r\n                        <button onClick={() => setPageNumber(p => Math.min(numPages, p + 1))} disabled={pageNumber >= numPages}>Siguiente</button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PDFUpload; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}