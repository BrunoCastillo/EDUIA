{"ast":null,"code":"import { createClient } from '@supabase/supabase-js';\n\n// Obtener las variables de entorno\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL;\nconst supabaseAnonKey = process.env.REACT_APP_SUPABASE_ANON_KEY;\n\n// Verificar que las variables de entorno existen\nif (!supabaseUrl || !supabaseAnonKey) {\n  console.error('Variables de entorno:', {\n    url: supabaseUrl,\n    key: supabaseAnonKey ? '***' : 'no definida'\n  });\n  throw new Error('Las variables de entorno de Supabase no están configuradas correctamente');\n}\n\n// Crear el cliente de Supabase\nconst supabase = createClient(supabaseUrl, supabaseAnonKey, {\n  auth: {\n    persistSession: true,\n    autoRefreshToken: true,\n    detectSessionInUrl: true,\n    storageKey: 'supabase.auth.token'\n  },\n  db: {\n    schema: 'public'\n  }\n});\n\n// Verificar la conexión\nsupabase.auth.onAuthStateChange((event, session) => {\n  console.log('Estado de autenticación:', event, session ? 'sesión activa' : 'sin sesión');\n});\nexport { supabase };","map":{"version":3,"names":["createClient","supabaseUrl","process","env","REACT_APP_SUPABASE_URL","supabaseAnonKey","REACT_APP_SUPABASE_ANON_KEY","console","error","url","key","Error","supabase","auth","persistSession","autoRefreshToken","detectSessionInUrl","storageKey","db","schema","onAuthStateChange","event","session","log"],"sources":["C:/Users/bruno/Documents/UNIR/TFE/EDUIA/src/config/supabaseClient.js"],"sourcesContent":["import { createClient } from '@supabase/supabase-js';\r\n\r\n// Obtener las variables de entorno\r\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL;\r\nconst supabaseAnonKey = process.env.REACT_APP_SUPABASE_ANON_KEY;\r\n\r\n// Verificar que las variables de entorno existen\r\nif (!supabaseUrl || !supabaseAnonKey) {\r\n    console.error('Variables de entorno:', {\r\n        url: supabaseUrl,\r\n        key: supabaseAnonKey ? '***' : 'no definida'\r\n    });\r\n    throw new Error('Las variables de entorno de Supabase no están configuradas correctamente');\r\n}\r\n\r\n// Crear el cliente de Supabase\r\nconst supabase = createClient(supabaseUrl, supabaseAnonKey, {\r\n    auth: {\r\n        persistSession: true,\r\n        autoRefreshToken: true,\r\n        detectSessionInUrl: true,\r\n        storageKey: 'supabase.auth.token'\r\n    },\r\n    db: {\r\n        schema: 'public'\r\n    }\r\n});\r\n\r\n// Verificar la conexión\r\nsupabase.auth.onAuthStateChange((event, session) => {\r\n    console.log('Estado de autenticación:', event, session ? 'sesión activa' : 'sin sesión');\r\n});\r\n\r\nexport { supabase }; "],"mappings":"AAAA,SAASA,YAAY,QAAQ,uBAAuB;;AAEpD;AACA,MAAMC,WAAW,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB;AACtD,MAAMC,eAAe,GAAGH,OAAO,CAACC,GAAG,CAACG,2BAA2B;;AAE/D;AACA,IAAI,CAACL,WAAW,IAAI,CAACI,eAAe,EAAE;EAClCE,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAE;IACnCC,GAAG,EAAER,WAAW;IAChBS,GAAG,EAAEL,eAAe,GAAG,KAAK,GAAG;EACnC,CAAC,CAAC;EACF,MAAM,IAAIM,KAAK,CAAC,0EAA0E,CAAC;AAC/F;;AAEA;AACA,MAAMC,QAAQ,GAAGZ,YAAY,CAACC,WAAW,EAAEI,eAAe,EAAE;EACxDQ,IAAI,EAAE;IACFC,cAAc,EAAE,IAAI;IACpBC,gBAAgB,EAAE,IAAI;IACtBC,kBAAkB,EAAE,IAAI;IACxBC,UAAU,EAAE;EAChB,CAAC;EACDC,EAAE,EAAE;IACAC,MAAM,EAAE;EACZ;AACJ,CAAC,CAAC;;AAEF;AACAP,QAAQ,CAACC,IAAI,CAACO,iBAAiB,CAAC,CAACC,KAAK,EAAEC,OAAO,KAAK;EAChDf,OAAO,CAACgB,GAAG,CAAC,0BAA0B,EAAEF,KAAK,EAAEC,OAAO,GAAG,eAAe,GAAG,YAAY,CAAC;AAC5F,CAAC,CAAC;AAEF,SAASV,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}