{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bruno\\\\Documents\\\\UNIR\\\\TFE\\\\EDUIA\\\\src\\\\components\\\\professor\\\\FileUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { supabase } from '../../config/supabaseClient';\nimport { useNavigate } from 'react-router-dom';\nimport './FileUpload.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUpload = ({\n  subjectId,\n  session: sessionProp\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [files, setFiles] = useState([]);\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [error, setError] = useState(null);\n  const [uploading, setUploading] = useState(false);\n  const [progress, setProgress] = useState({});\n  const [selectedFolder, setSelectedFolder] = useState('documents');\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [session, setSession] = useState(null);\n  useEffect(() => {\n    checkAuth();\n  }, [sessionProp]);\n  useEffect(() => {\n    if (isAuthenticated) {\n      fetchUploadedFiles();\n    }\n  }, [selectedFolder, subjectId, isAuthenticated]);\n  const checkAuth = async () => {\n    try {\n      setIsLoading(true);\n      let currentSession = sessionProp;\n      if (!currentSession) {\n        const {\n          data: {\n            session\n          },\n          error\n        } = await supabase.auth.getSession();\n        if (error) {\n          console.error('Error al verificar sesión:', error);\n          throw error;\n        }\n        currentSession = session;\n      }\n      console.log('[FileUpload] Sesión recibida:', currentSession);\n      setSession(currentSession);\n      if (!currentSession) {\n        console.log('[FileUpload] No hay sesión activa, redirigiendo a login...');\n        navigate('/login');\n        return;\n      }\n      setIsAuthenticated(true);\n    } catch (error) {\n      console.error('[FileUpload] Error checking auth:', error);\n      setIsAuthenticated(false);\n      navigate('/login');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const fetchUploadedFiles = async () => {\n    try {\n      console.log('Intentando obtener archivos para subjectId:', subjectId);\n      const {\n        data,\n        error\n      } = await supabase.from('files').select('*').eq('folder', selectedFolder).eq('subject_id', subjectId);\n      if (error) {\n        console.error('Error al obtener archivos:', error);\n        throw error;\n      }\n      console.log('Archivos obtenidos:', data);\n      setUploadedFiles(data || []);\n    } catch (error) {\n      console.error('Error al cargar archivos:', error);\n      setError('Error al cargar los archivos');\n    }\n  };\n  const handleFileChange = event => {\n    if (!isAuthenticated) {\n      setError('Debes iniciar sesión para subir archivos');\n      return;\n    }\n    const selectedFiles = Array.from(event.target.files);\n    const validFiles = selectedFiles.filter(file => {\n      const validTypes = ['application/pdf', 'application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document', 'application/vnd.ms-powerpoint', 'application/vnd.openxmlformats-officedocument.presentationml.presentation', 'image/jpeg', 'image/png', 'image/gif'];\n      return validTypes.includes(file.type);\n    });\n    if (validFiles.length !== selectedFiles.length) {\n      setError('Algunos archivos no son válidos. Solo se permiten PDF, Word, PowerPoint e imágenes.');\n    }\n    setFiles(prevFiles => [...prevFiles, ...validFiles]);\n    setError(null);\n  };\n  const removeFile = index => {\n    setFiles(prevFiles => prevFiles.filter((_, i) => i !== index));\n  };\n  const handleUpload = async () => {\n    if (!isAuthenticated) {\n      setError('Debes iniciar sesión para subir archivos');\n      return;\n    }\n    if (files.length === 0) {\n      setError('Por favor, selecciona al menos un archivo');\n      return;\n    }\n    setUploading(true);\n    setError(null);\n    try {\n      // Verificar la sesión antes de subir\n      const {\n        data: {\n          session\n        },\n        error: sessionError\n      } = await supabase.auth.getSession();\n      if (sessionError) throw sessionError;\n      if (!session) throw new Error('No hay sesión activa');\n\n      // Subir cada archivo\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        const fileExt = file.name.split('.').pop();\n        const fileName = `${Math.random().toString(36).substring(2)}_${Date.now()}.${fileExt}`;\n        const filePath = `${selectedFolder}/${fileName}`;\n        setProgress(prev => ({\n          ...prev,\n          [fileName]: 0\n        }));\n\n        // Subir archivo al storage\n        const {\n          error: uploadError\n        } = await supabase.storage.from('documents').upload(filePath, file, {\n          cacheControl: '3600',\n          upsert: false\n        });\n        if (uploadError) {\n          console.error('Error al subir archivo:', uploadError);\n          throw new Error('Error al subir el archivo al almacenamiento');\n        }\n\n        // Obtener URL pública\n        const {\n          data: {\n            publicUrl\n          }\n        } = supabase.storage.from('documents').getPublicUrl(filePath);\n\n        // Guardar en la base de datos\n        const {\n          error: dbError\n        } = await supabase.from('files').insert([{\n          subject_id: subjectId,\n          file_name: file.name,\n          file_url: publicUrl,\n          file_type: file.type,\n          file_size: file.size,\n          folder: selectedFolder\n        }]);\n        if (dbError) {\n          console.error('Error al guardar en la base de datos:', dbError);\n          throw new Error('Error al guardar la información del archivo');\n        }\n        setProgress(prev => ({\n          ...prev,\n          [fileName]: 100\n        }));\n      }\n      await fetchUploadedFiles();\n      setFiles([]);\n      setProgress({});\n    } catch (error) {\n      console.error('Error al subir archivos:', error);\n      setError(error.message || 'Error al subir los archivos');\n    } finally {\n      setUploading(false);\n    }\n  };\n  const handleDelete = async fileId => {\n    if (!isAuthenticated) {\n      setError('Debes iniciar sesión para eliminar archivos');\n      return;\n    }\n    try {\n      const {\n        error\n      } = await supabase.from('files').delete().eq('id', fileId);\n      if (error) throw error;\n      await fetchUploadedFiles();\n    } catch (error) {\n      console.error('Error al eliminar archivo:', error);\n      setError('Error al eliminar el archivo');\n    }\n  };\n  const formatFileSize = bytes => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-upload-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-message\",\n        children: \"Verificando autenticaci\\xF3n...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }, this);\n  }\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-upload-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: [\"Debes iniciar sesi\\xF3n para subir y gestionar archivos.\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate('/login'),\n          className: \"login-button\",\n          children: \"Ir a inicio de sesi\\xF3n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"file-upload-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"folder-selector\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"folder\",\n        children: \"Seleccionar carpeta:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"folder\",\n        value: selectedFolder,\n        onChange: e => setSelectedFolder(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"documents\",\n          children: \"Documentos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"syllabi\",\n          children: \"Programas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"resources\",\n          children: \"Recursos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        multiple: true,\n        onChange: handleFileChange,\n        className: \"file-input\",\n        accept: \".pdf,.doc,.docx,.ppt,.pptx,.jpg,.jpeg,.png,.gif\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpload,\n        disabled: uploading || files.length === 0,\n        className: \"upload-button\",\n        children: uploading ? 'Subiendo...' : 'Subir archivos'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 23\n    }, this), files.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"files-queue\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Archivos a subir:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"files-list\",\n        children: files.map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"file-name\",\n              children: file.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"file-type\",\n              children: file.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"file-size\",\n              children: formatFileSize(file.size)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 37\n            }, this), progress[file.name] !== undefined && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-bar\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress-fill\",\n                style: {\n                  width: `${progress[file.name]}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-actions\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => removeFile(index),\n              className: \"remove-button\",\n              children: \"Eliminar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 17\n    }, this), uploadedFiles.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"uploaded-files\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Archivos subidos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"files-list\",\n        children: uploadedFiles.map(file => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"file-name\",\n              children: file.file_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"file-type\",\n              children: file.file_type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"file-size\",\n              children: formatFileSize(file.file_size)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"a\", {\n              href: file.file_url,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              className: \"view-button\",\n              children: \"Ver\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"delete-button\",\n              onClick: () => handleDelete(file.id),\n              disabled: uploading,\n              children: \"Eliminar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 33\n          }, this)]\n        }, file.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 247,\n    columnNumber: 9\n  }, this);\n};\n_s(FileUpload, \"MfjI/TwfakMYDBRW/0vhRbCQYiM=\", false, function () {\n  return [useNavigate];\n});\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","useEffect","supabase","useNavigate","jsxDEV","_jsxDEV","FileUpload","subjectId","session","sessionProp","_s","navigate","files","setFiles","uploadedFiles","setUploadedFiles","error","setError","uploading","setUploading","progress","setProgress","selectedFolder","setSelectedFolder","isAuthenticated","setIsAuthenticated","isLoading","setIsLoading","setSession","checkAuth","fetchUploadedFiles","currentSession","data","auth","getSession","console","log","from","select","eq","handleFileChange","event","selectedFiles","Array","target","validFiles","filter","file","validTypes","includes","type","length","prevFiles","removeFile","index","_","i","handleUpload","sessionError","Error","fileExt","name","split","pop","fileName","Math","random","toString","substring","Date","now","filePath","prev","uploadError","storage","upload","cacheControl","upsert","publicUrl","getPublicUrl","dbError","insert","subject_id","file_name","file_url","file_type","file_size","size","folder","message","handleDelete","fileId","delete","formatFileSize","bytes","k","sizes","floor","parseFloat","pow","toFixed","className","children","_jsxFileName","lineNumber","columnNumber","onClick","htmlFor","id","value","onChange","e","multiple","accept","disabled","map","undefined","style","width","href","rel","_c","$RefreshReg$"],"sources":["C:/Users/bruno/Documents/UNIR/TFE/EDUIA/src/components/professor/FileUpload.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { supabase } from '../../config/supabaseClient';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './FileUpload.css';\r\n\r\nconst FileUpload = ({ subjectId, session: sessionProp }) => {\r\n    const navigate = useNavigate();\r\n    const [files, setFiles] = useState([]);\r\n    const [uploadedFiles, setUploadedFiles] = useState([]);\r\n    const [error, setError] = useState(null);\r\n    const [uploading, setUploading] = useState(false);\r\n    const [progress, setProgress] = useState({});\r\n    const [selectedFolder, setSelectedFolder] = useState('documents');\r\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [session, setSession] = useState(null);\r\n\r\n    useEffect(() => {\r\n        checkAuth();\r\n    }, [sessionProp]);\r\n\r\n    useEffect(() => {\r\n        if (isAuthenticated) {\r\n            fetchUploadedFiles();\r\n        }\r\n    }, [selectedFolder, subjectId, isAuthenticated]);\r\n\r\n    const checkAuth = async () => {\r\n        try {\r\n            setIsLoading(true);\r\n            let currentSession = sessionProp;\r\n            if (!currentSession) {\r\n                const { data: { session }, error } = await supabase.auth.getSession();\r\n                if (error) {\r\n                    console.error('Error al verificar sesión:', error);\r\n                    throw error;\r\n                }\r\n                currentSession = session;\r\n            }\r\n            console.log('[FileUpload] Sesión recibida:', currentSession);\r\n            setSession(currentSession);\r\n            if (!currentSession) {\r\n                console.log('[FileUpload] No hay sesión activa, redirigiendo a login...');\r\n                navigate('/login');\r\n                return;\r\n            }\r\n            setIsAuthenticated(true);\r\n        } catch (error) {\r\n            console.error('[FileUpload] Error checking auth:', error);\r\n            setIsAuthenticated(false);\r\n            navigate('/login');\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    const fetchUploadedFiles = async () => {\r\n        try {\r\n            console.log('Intentando obtener archivos para subjectId:', subjectId);\r\n            const { data, error } = await supabase\r\n                .from('files')\r\n                .select('*')\r\n                .eq('folder', selectedFolder)\r\n                .eq('subject_id', subjectId);\r\n\r\n            if (error) {\r\n                console.error('Error al obtener archivos:', error);\r\n                throw error;\r\n            }\r\n            console.log('Archivos obtenidos:', data);\r\n            setUploadedFiles(data || []);\r\n        } catch (error) {\r\n            console.error('Error al cargar archivos:', error);\r\n            setError('Error al cargar los archivos');\r\n        }\r\n    };\r\n\r\n    const handleFileChange = (event) => {\r\n        if (!isAuthenticated) {\r\n            setError('Debes iniciar sesión para subir archivos');\r\n            return;\r\n        }\r\n\r\n        const selectedFiles = Array.from(event.target.files);\r\n        const validFiles = selectedFiles.filter(file => {\r\n            const validTypes = [\r\n                'application/pdf',\r\n                'application/msword',\r\n                'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\r\n                'application/vnd.ms-powerpoint',\r\n                'application/vnd.openxmlformats-officedocument.presentationml.presentation',\r\n                'image/jpeg',\r\n                'image/png',\r\n                'image/gif'\r\n            ];\r\n            return validTypes.includes(file.type);\r\n        });\r\n\r\n        if (validFiles.length !== selectedFiles.length) {\r\n            setError('Algunos archivos no son válidos. Solo se permiten PDF, Word, PowerPoint e imágenes.');\r\n        }\r\n\r\n        setFiles(prevFiles => [...prevFiles, ...validFiles]);\r\n        setError(null);\r\n    };\r\n\r\n    const removeFile = (index) => {\r\n        setFiles(prevFiles => prevFiles.filter((_, i) => i !== index));\r\n    };\r\n\r\n    const handleUpload = async () => {\r\n        if (!isAuthenticated) {\r\n            setError('Debes iniciar sesión para subir archivos');\r\n            return;\r\n        }\r\n\r\n        if (files.length === 0) {\r\n            setError('Por favor, selecciona al menos un archivo');\r\n            return;\r\n        }\r\n\r\n        setUploading(true);\r\n        setError(null);\r\n\r\n        try {\r\n            // Verificar la sesión antes de subir\r\n            const { data: { session }, error: sessionError } = await supabase.auth.getSession();\r\n            if (sessionError) throw sessionError;\r\n            if (!session) throw new Error('No hay sesión activa');\r\n\r\n            // Subir cada archivo\r\n            for (let i = 0; i < files.length; i++) {\r\n                const file = files[i];\r\n                const fileExt = file.name.split('.').pop();\r\n                const fileName = `${Math.random().toString(36).substring(2)}_${Date.now()}.${fileExt}`;\r\n                const filePath = `${selectedFolder}/${fileName}`;\r\n\r\n                setProgress(prev => ({ ...prev, [fileName]: 0 }));\r\n\r\n                // Subir archivo al storage\r\n                const { error: uploadError } = await supabase.storage\r\n                    .from('documents')\r\n                    .upload(filePath, file, {\r\n                        cacheControl: '3600',\r\n                        upsert: false\r\n                    });\r\n\r\n                if (uploadError) {\r\n                    console.error('Error al subir archivo:', uploadError);\r\n                    throw new Error('Error al subir el archivo al almacenamiento');\r\n                }\r\n\r\n                // Obtener URL pública\r\n                const { data: { publicUrl } } = supabase.storage\r\n                    .from('documents')\r\n                    .getPublicUrl(filePath);\r\n\r\n                // Guardar en la base de datos\r\n                const { error: dbError } = await supabase\r\n                    .from('files')\r\n                    .insert([\r\n                        {\r\n                            subject_id: subjectId,\r\n                            file_name: file.name,\r\n                            file_url: publicUrl,\r\n                            file_type: file.type,\r\n                            file_size: file.size,\r\n                            folder: selectedFolder\r\n                        }\r\n                    ]);\r\n\r\n                if (dbError) {\r\n                    console.error('Error al guardar en la base de datos:', dbError);\r\n                    throw new Error('Error al guardar la información del archivo');\r\n                }\r\n\r\n                setProgress(prev => ({ ...prev, [fileName]: 100 }));\r\n            }\r\n\r\n            await fetchUploadedFiles();\r\n            setFiles([]);\r\n            setProgress({});\r\n        } catch (error) {\r\n            console.error('Error al subir archivos:', error);\r\n            setError(error.message || 'Error al subir los archivos');\r\n        } finally {\r\n            setUploading(false);\r\n        }\r\n    };\r\n\r\n    const handleDelete = async (fileId) => {\r\n        if (!isAuthenticated) {\r\n            setError('Debes iniciar sesión para eliminar archivos');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const { error } = await supabase\r\n                .from('files')\r\n                .delete()\r\n                .eq('id', fileId);\r\n\r\n            if (error) throw error;\r\n\r\n            await fetchUploadedFiles();\r\n        } catch (error) {\r\n            console.error('Error al eliminar archivo:', error);\r\n            setError('Error al eliminar el archivo');\r\n        }\r\n    };\r\n\r\n    const formatFileSize = (bytes) => {\r\n        if (bytes === 0) return '0 Bytes';\r\n        const k = 1024;\r\n        const sizes = ['Bytes', 'KB', 'MB', 'GB'];\r\n        const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n        return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n    };\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <div className=\"file-upload-container\">\r\n                <div className=\"loading-message\">\r\n                    Verificando autenticación...\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (!isAuthenticated) {\r\n        return (\r\n            <div className=\"file-upload-container\">\r\n                <div className=\"error-message\">\r\n                    Debes iniciar sesión para subir y gestionar archivos.\r\n                    <button \r\n                        onClick={() => navigate('/login')}\r\n                        className=\"login-button\"\r\n                    >\r\n                        Ir a inicio de sesión\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"file-upload-container\">\r\n            <div className=\"folder-selector\">\r\n                <label htmlFor=\"folder\">Seleccionar carpeta:</label>\r\n                <select\r\n                    id=\"folder\"\r\n                    value={selectedFolder}\r\n                    onChange={(e) => setSelectedFolder(e.target.value)}\r\n                >\r\n                    <option value=\"documents\">Documentos</option>\r\n                    <option value=\"syllabi\">Programas</option>\r\n                    <option value=\"resources\">Recursos</option>\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"upload-section\">\r\n                <input\r\n                    type=\"file\"\r\n                    multiple\r\n                    onChange={handleFileChange}\r\n                    className=\"file-input\"\r\n                    accept=\".pdf,.doc,.docx,.ppt,.pptx,.jpg,.jpeg,.png,.gif\"\r\n                />\r\n                <button\r\n                    onClick={handleUpload}\r\n                    disabled={uploading || files.length === 0}\r\n                    className=\"upload-button\"\r\n                >\r\n                    {uploading ? 'Subiendo...' : 'Subir archivos'}\r\n                </button>\r\n            </div>\r\n\r\n            {error && <div className=\"error-message\">{error}</div>}\r\n\r\n            {files.length > 0 && (\r\n                <div className=\"files-queue\">\r\n                    <h4>Archivos a subir:</h4>\r\n                    <div className=\"files-list\">\r\n                        {files.map((file, index) => (\r\n                            <div key={index} className=\"file-item\">\r\n                                <div className=\"file-details\">\r\n                                    <span className=\"file-name\">{file.name}</span>\r\n                                    <span className=\"file-type\">{file.type}</span>\r\n                                    <span className=\"file-size\">{formatFileSize(file.size)}</span>\r\n                                    {progress[file.name] !== undefined && (\r\n                                        <div className=\"progress-bar\">\r\n                                            <div\r\n                                                className=\"progress-fill\"\r\n                                                style={{ width: `${progress[file.name]}%` }}\r\n                                            />\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                                <div className=\"file-actions\">\r\n                                    <button\r\n                                        onClick={() => removeFile(index)}\r\n                                        className=\"remove-button\"\r\n                                    >\r\n                                        Eliminar\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {uploadedFiles.length > 0 && (\r\n                <div className=\"uploaded-files\">\r\n                    <h4>Archivos subidos</h4>\r\n                    <div className=\"files-list\">\r\n                        {uploadedFiles.map((file) => (\r\n                            <div key={file.id} className=\"file-item\">\r\n                                <div className=\"file-details\">\r\n                                    <span className=\"file-name\">{file.file_name}</span>\r\n                                    <span className=\"file-type\">{file.file_type}</span>\r\n                                    <span className=\"file-size\">{formatFileSize(file.file_size)}</span>\r\n                                </div>\r\n                                <div className=\"file-actions\">\r\n                                    <a\r\n                                        href={file.file_url}\r\n                                        target=\"_blank\"\r\n                                        rel=\"noopener noreferrer\"\r\n                                        className=\"view-button\"\r\n                                    >\r\n                                        Ver\r\n                                    </a>\r\n                                    <button\r\n                                        className=\"delete-button\"\r\n                                        onClick={() => handleDelete(file.id)}\r\n                                        disabled={uploading}\r\n                                    >\r\n                                        Eliminar\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FileUpload; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}