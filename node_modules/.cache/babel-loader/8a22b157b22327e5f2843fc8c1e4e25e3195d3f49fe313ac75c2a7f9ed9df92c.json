{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bruno\\\\Documents\\\\UNIR\\\\TFE\\\\EDUIA\\\\src\\\\components\\\\professor\\\\FileUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { supabase } from '../../config/supabaseClient';\nimport './FileUpload.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUpload = ({\n  subjectId\n}) => {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [error, setError] = useState(null);\n  const [uploading, setUploading] = useState(false);\n  const [progress, setProgress] = useState({});\n  const [selectedFolder, setSelectedFolder] = useState('documents');\n  useEffect(() => {\n    fetchUploadedFiles();\n  }, [selectedFolder, subjectId]);\n  const fetchUploadedFiles = async () => {\n    try {\n      const {\n        data,\n        error\n      } = await supabase.from('files').select('*').eq('folder', selectedFolder).eq('subject_id', subjectId);\n      if (error) throw error;\n      setUploadedFiles(data || []);\n    } catch (error) {\n      console.error('Error al cargar archivos:', error);\n      setError('Error al cargar los archivos');\n    }\n  };\n  const handleFileChange = event => {\n    const selectedFiles = Array.from(event.target.files);\n    const validFiles = selectedFiles.filter(file => {\n      const validTypes = ['application/pdf', 'application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document', 'application/vnd.ms-powerpoint', 'application/vnd.openxmlformats-officedocument.presentationml.presentation', 'image/jpeg', 'image/png', 'image/gif'];\n      return validTypes.includes(file.type);\n    });\n    if (validFiles.length !== selectedFiles.length) {\n      setError('Algunos archivos no son válidos. Solo se permiten PDF, Word, PowerPoint e imágenes.');\n    }\n    setFiles(prevFiles => [...prevFiles, ...validFiles]);\n    setError(null);\n  };\n  const removeFile = index => {\n    setFiles(prevFiles => prevFiles.filter((_, i) => i !== index));\n  };\n  const handleUpload = async () => {\n    if (files.length === 0) {\n      setError('Por favor, selecciona al menos un archivo');\n      return;\n    }\n    setUploading(true);\n    setError(null);\n    try {\n      // Verificar si existe el bucket\n      const {\n        data: buckets,\n        error: bucketsError\n      } = await supabase.storage.listBuckets();\n      if (bucketsError) throw bucketsError;\n      const documentsBucket = buckets.find(b => b.name === 'documents');\n      if (!documentsBucket) {\n        try {\n          await supabase.storage.createBucket('documents', {\n            public: true\n          });\n        } catch (error) {\n          if (error.message.includes('policy')) {\n            setError('No tienes permisos para crear el almacenamiento. Por favor, contacta al administrador.');\n          } else {\n            throw error;\n          }\n          return;\n        }\n      }\n\n      // Subir cada archivo\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        const fileExt = file.name.split('.').pop();\n        const fileName = `${Math.random().toString(36).substring(2)}_${Date.now()}.${fileExt}`;\n        const filePath = `${selectedFolder}/${fileName}`;\n        setProgress(prev => ({\n          ...prev,\n          [fileName]: 0\n        }));\n        const {\n          error: uploadError\n        } = await supabase.storage.from('documents').upload(filePath, file, {\n          cacheControl: '3600',\n          upsert: false\n        });\n        if (uploadError) throw uploadError;\n        const {\n          data: {\n            publicUrl\n          }\n        } = supabase.storage.from('documents').getPublicUrl(filePath);\n        const {\n          error: dbError\n        } = await supabase.from('files').insert([{\n          subject_id: subjectId,\n          file_name: file.name,\n          file_url: publicUrl,\n          file_type: file.type,\n          file_size: file.size,\n          folder: selectedFolder\n        }]);\n        if (dbError) throw dbError;\n        setProgress(prev => ({\n          ...prev,\n          [fileName]: 100\n        }));\n      }\n      await fetchUploadedFiles();\n      setFiles([]);\n      setProgress({});\n    } catch (error) {\n      console.error('Error al subir archivos:', error);\n      setError('Error al subir los archivos');\n    } finally {\n      setUploading(false);\n    }\n  };\n  const handleDelete = async fileId => {\n    try {\n      const {\n        error\n      } = await supabase.from('files').delete().eq('id', fileId);\n      if (error) throw error;\n      await fetchUploadedFiles();\n    } catch (error) {\n      console.error('Error al eliminar archivo:', error);\n      setError('Error al eliminar el archivo');\n    }\n  };\n  const formatFileSize = bytes => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"file-upload-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"folder-selector\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"folder\",\n        children: \"Seleccionar carpeta:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"folder\",\n        value: selectedFolder,\n        onChange: e => setSelectedFolder(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"documents\",\n          children: \"Documentos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"syllabi\",\n          children: \"Programas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"resources\",\n          children: \"Recursos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        multiple: true,\n        onChange: handleFileChange,\n        className: \"file-input\",\n        accept: \".pdf,.doc,.docx,.ppt,.pptx,.jpg,.jpeg,.png,.gif\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpload,\n        disabled: uploading || files.length === 0,\n        className: \"upload-button\",\n        children: uploading ? 'Subiendo...' : 'Subir archivos'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 23\n    }, this), files.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"files-queue\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Archivos a subir:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"files-list\",\n        children: files.map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"file-name\",\n              children: file.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"file-type\",\n              children: file.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"file-size\",\n              children: formatFileSize(file.size)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 37\n            }, this), progress[file.name] !== undefined && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-bar\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress-fill\",\n                style: {\n                  width: `${progress[file.name]}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-actions\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => removeFile(index),\n              className: \"remove-button\",\n              children: \"Eliminar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 17\n    }, this), uploadedFiles.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"uploaded-files\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Archivos subidos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"files-list\",\n        children: uploadedFiles.map(file => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"file-name\",\n              children: file.file_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"file-type\",\n              children: file.file_type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"file-size\",\n              children: formatFileSize(file.file_size)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"a\", {\n              href: file.file_url,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              className: \"view-button\",\n              children: \"Ver\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"delete-button\",\n              onClick: () => handleDelete(file.id),\n              disabled: uploading,\n              children: \"Eliminar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 33\n          }, this)]\n        }, file.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 9\n  }, this);\n};\n_s(FileUpload, \"8HGBgrfDkUrANVYIE5o8XDdUXoY=\");\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","useEffect","supabase","jsxDEV","_jsxDEV","FileUpload","subjectId","_s","files","setFiles","uploadedFiles","setUploadedFiles","error","setError","uploading","setUploading","progress","setProgress","selectedFolder","setSelectedFolder","fetchUploadedFiles","data","from","select","eq","console","handleFileChange","event","selectedFiles","Array","target","validFiles","filter","file","validTypes","includes","type","length","prevFiles","removeFile","index","_","i","handleUpload","buckets","bucketsError","storage","listBuckets","documentsBucket","find","b","name","createBucket","public","message","fileExt","split","pop","fileName","Math","random","toString","substring","Date","now","filePath","prev","uploadError","upload","cacheControl","upsert","publicUrl","getPublicUrl","dbError","insert","subject_id","file_name","file_url","file_type","file_size","size","folder","handleDelete","fileId","delete","formatFileSize","bytes","k","sizes","floor","log","parseFloat","pow","toFixed","className","children","htmlFor","_jsxFileName","lineNumber","columnNumber","id","value","onChange","e","multiple","accept","onClick","disabled","map","undefined","style","width","href","rel","_c","$RefreshReg$"],"sources":["C:/Users/bruno/Documents/UNIR/TFE/EDUIA/src/components/professor/FileUpload.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { supabase } from '../../config/supabaseClient';\r\nimport './FileUpload.css';\r\n\r\nconst FileUpload = ({ subjectId }) => {\r\n    const [files, setFiles] = useState([]);\r\n    const [uploadedFiles, setUploadedFiles] = useState([]);\r\n    const [error, setError] = useState(null);\r\n    const [uploading, setUploading] = useState(false);\r\n    const [progress, setProgress] = useState({});\r\n    const [selectedFolder, setSelectedFolder] = useState('documents');\r\n\r\n    useEffect(() => {\r\n        fetchUploadedFiles();\r\n    }, [selectedFolder, subjectId]);\r\n\r\n    const fetchUploadedFiles = async () => {\r\n        try {\r\n            const { data, error } = await supabase\r\n                .from('files')\r\n                .select('*')\r\n                .eq('folder', selectedFolder)\r\n                .eq('subject_id', subjectId);\r\n\r\n            if (error) throw error;\r\n            setUploadedFiles(data || []);\r\n        } catch (error) {\r\n            console.error('Error al cargar archivos:', error);\r\n            setError('Error al cargar los archivos');\r\n        }\r\n    };\r\n\r\n    const handleFileChange = (event) => {\r\n        const selectedFiles = Array.from(event.target.files);\r\n        const validFiles = selectedFiles.filter(file => {\r\n            const validTypes = [\r\n                'application/pdf',\r\n                'application/msword',\r\n                'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\r\n                'application/vnd.ms-powerpoint',\r\n                'application/vnd.openxmlformats-officedocument.presentationml.presentation',\r\n                'image/jpeg',\r\n                'image/png',\r\n                'image/gif'\r\n            ];\r\n            return validTypes.includes(file.type);\r\n        });\r\n\r\n        if (validFiles.length !== selectedFiles.length) {\r\n            setError('Algunos archivos no son válidos. Solo se permiten PDF, Word, PowerPoint e imágenes.');\r\n        }\r\n\r\n        setFiles(prevFiles => [...prevFiles, ...validFiles]);\r\n        setError(null);\r\n    };\r\n\r\n    const removeFile = (index) => {\r\n        setFiles(prevFiles => prevFiles.filter((_, i) => i !== index));\r\n    };\r\n\r\n    const handleUpload = async () => {\r\n        if (files.length === 0) {\r\n            setError('Por favor, selecciona al menos un archivo');\r\n            return;\r\n        }\r\n\r\n        setUploading(true);\r\n        setError(null);\r\n\r\n        try {\r\n            // Verificar si existe el bucket\r\n            const { data: buckets, error: bucketsError } = await supabase.storage.listBuckets();\r\n            if (bucketsError) throw bucketsError;\r\n\r\n            const documentsBucket = buckets.find(b => b.name === 'documents');\r\n            if (!documentsBucket) {\r\n                try {\r\n                    await supabase.storage.createBucket('documents', {\r\n                        public: true\r\n                    });\r\n                } catch (error) {\r\n                    if (error.message.includes('policy')) {\r\n                        setError('No tienes permisos para crear el almacenamiento. Por favor, contacta al administrador.');\r\n                    } else {\r\n                        throw error;\r\n                    }\r\n                    return;\r\n                }\r\n            }\r\n\r\n            // Subir cada archivo\r\n            for (let i = 0; i < files.length; i++) {\r\n                const file = files[i];\r\n                const fileExt = file.name.split('.').pop();\r\n                const fileName = `${Math.random().toString(36).substring(2)}_${Date.now()}.${fileExt}`;\r\n                const filePath = `${selectedFolder}/${fileName}`;\r\n\r\n                setProgress(prev => ({ ...prev, [fileName]: 0 }));\r\n\r\n                const { error: uploadError } = await supabase.storage\r\n                    .from('documents')\r\n                    .upload(filePath, file, {\r\n                        cacheControl: '3600',\r\n                        upsert: false\r\n                    });\r\n\r\n                if (uploadError) throw uploadError;\r\n\r\n                const { data: { publicUrl } } = supabase.storage\r\n                    .from('documents')\r\n                    .getPublicUrl(filePath);\r\n\r\n                const { error: dbError } = await supabase\r\n                    .from('files')\r\n                    .insert([\r\n                        {\r\n                            subject_id: subjectId,\r\n                            file_name: file.name,\r\n                            file_url: publicUrl,\r\n                            file_type: file.type,\r\n                            file_size: file.size,\r\n                            folder: selectedFolder\r\n                        }\r\n                    ]);\r\n\r\n                if (dbError) throw dbError;\r\n\r\n                setProgress(prev => ({ ...prev, [fileName]: 100 }));\r\n            }\r\n\r\n            await fetchUploadedFiles();\r\n            setFiles([]);\r\n            setProgress({});\r\n        } catch (error) {\r\n            console.error('Error al subir archivos:', error);\r\n            setError('Error al subir los archivos');\r\n        } finally {\r\n            setUploading(false);\r\n        }\r\n    };\r\n\r\n    const handleDelete = async (fileId) => {\r\n        try {\r\n            const { error } = await supabase\r\n                .from('files')\r\n                .delete()\r\n                .eq('id', fileId);\r\n\r\n            if (error) throw error;\r\n\r\n            await fetchUploadedFiles();\r\n        } catch (error) {\r\n            console.error('Error al eliminar archivo:', error);\r\n            setError('Error al eliminar el archivo');\r\n        }\r\n    };\r\n\r\n    const formatFileSize = (bytes) => {\r\n        if (bytes === 0) return '0 Bytes';\r\n        const k = 1024;\r\n        const sizes = ['Bytes', 'KB', 'MB', 'GB'];\r\n        const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n        return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n    };\r\n\r\n    return (\r\n        <div className=\"file-upload-container\">\r\n            <div className=\"folder-selector\">\r\n                <label htmlFor=\"folder\">Seleccionar carpeta:</label>\r\n                <select\r\n                    id=\"folder\"\r\n                    value={selectedFolder}\r\n                    onChange={(e) => setSelectedFolder(e.target.value)}\r\n                >\r\n                    <option value=\"documents\">Documentos</option>\r\n                    <option value=\"syllabi\">Programas</option>\r\n                    <option value=\"resources\">Recursos</option>\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"upload-section\">\r\n                <input\r\n                    type=\"file\"\r\n                    multiple\r\n                    onChange={handleFileChange}\r\n                    className=\"file-input\"\r\n                    accept=\".pdf,.doc,.docx,.ppt,.pptx,.jpg,.jpeg,.png,.gif\"\r\n                />\r\n                <button\r\n                    onClick={handleUpload}\r\n                    disabled={uploading || files.length === 0}\r\n                    className=\"upload-button\"\r\n                >\r\n                    {uploading ? 'Subiendo...' : 'Subir archivos'}\r\n                </button>\r\n            </div>\r\n\r\n            {error && <div className=\"error-message\">{error}</div>}\r\n\r\n            {files.length > 0 && (\r\n                <div className=\"files-queue\">\r\n                    <h4>Archivos a subir:</h4>\r\n                    <div className=\"files-list\">\r\n                        {files.map((file, index) => (\r\n                            <div key={index} className=\"file-item\">\r\n                                <div className=\"file-details\">\r\n                                    <span className=\"file-name\">{file.name}</span>\r\n                                    <span className=\"file-type\">{file.type}</span>\r\n                                    <span className=\"file-size\">{formatFileSize(file.size)}</span>\r\n                                    {progress[file.name] !== undefined && (\r\n                                        <div className=\"progress-bar\">\r\n                                            <div\r\n                                                className=\"progress-fill\"\r\n                                                style={{ width: `${progress[file.name]}%` }}\r\n                                            />\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                                <div className=\"file-actions\">\r\n                                    <button\r\n                                        onClick={() => removeFile(index)}\r\n                                        className=\"remove-button\"\r\n                                    >\r\n                                        Eliminar\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {uploadedFiles.length > 0 && (\r\n                <div className=\"uploaded-files\">\r\n                    <h4>Archivos subidos</h4>\r\n                    <div className=\"files-list\">\r\n                        {uploadedFiles.map((file) => (\r\n                            <div key={file.id} className=\"file-item\">\r\n                                <div className=\"file-details\">\r\n                                    <span className=\"file-name\">{file.file_name}</span>\r\n                                    <span className=\"file-type\">{file.file_type}</span>\r\n                                    <span className=\"file-size\">{formatFileSize(file.file_size)}</span>\r\n                                </div>\r\n                                <div className=\"file-actions\">\r\n                                    <a\r\n                                        href={file.file_url}\r\n                                        target=\"_blank\"\r\n                                        rel=\"noopener noreferrer\"\r\n                                        className=\"view-button\"\r\n                                    >\r\n                                        Ver\r\n                                    </a>\r\n                                    <button\r\n                                        className=\"delete-button\"\r\n                                        onClick={() => handleDelete(file.id)}\r\n                                        disabled={uploading}\r\n                                    >\r\n                                        Eliminar\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FileUpload; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}