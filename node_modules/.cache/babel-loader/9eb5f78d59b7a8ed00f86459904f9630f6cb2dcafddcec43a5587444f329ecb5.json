{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bruno\\\\Documents\\\\UNIR\\\\TFE\\\\EDUIA\\\\src\\\\components\\\\professor\\\\FileUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { supabase } from '../../config/supabaseClient';\nimport { useNavigate } from 'react-router-dom';\nimport { Document, Page, pdfjs } from 'react-pdf';\nimport 'react-pdf/dist/esm/Page/AnnotationLayer.css';\nimport 'react-pdf/dist/esm/Page/TextLayer.css';\nimport './FileUpload.css';\n\n// Configurar el worker de PDF.js con la versión compatible\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\npdfjs.GlobalWorkerOptions.workerSrc = `//unpkg.com/pdfjs-dist@3.4.120/build/pdf.worker.min.js`;\nconst FileUpload = ({\n  subjectId,\n  session: sessionProp\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [files, setFiles] = useState([]);\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [error, setError] = useState(null);\n  const [uploading, setUploading] = useState(false);\n  const [progress, setProgress] = useState({});\n  const [selectedFolder, setSelectedFolder] = useState('documents');\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [session, setSession] = useState(null);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [numPages, setNumPages] = useState(null);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [showPdfViewer, setShowPdfViewer] = useState(false);\n  useEffect(() => {\n    checkAuth();\n  }, [sessionProp]);\n  useEffect(() => {\n    if (isAuthenticated) {\n      fetchUploadedFiles();\n    }\n  }, [selectedFolder, subjectId, isAuthenticated]);\n  const checkAuth = async () => {\n    try {\n      setIsLoading(true);\n      let currentSession = sessionProp;\n      if (!currentSession) {\n        const {\n          data: {\n            session\n          },\n          error\n        } = await supabase.auth.getSession();\n        if (error) {\n          console.error('Error al verificar sesión:', error);\n          throw error;\n        }\n        currentSession = session;\n      }\n      console.log('[FileUpload] Sesión recibida:', currentSession);\n      setSession(currentSession);\n      if (!currentSession) {\n        console.log('[FileUpload] No hay sesión activa, redirigiendo a login...');\n        navigate('/login');\n        return;\n      }\n      setIsAuthenticated(true);\n    } catch (error) {\n      console.error('[FileUpload] Error checking auth:', error);\n      setIsAuthenticated(false);\n      navigate('/login');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const fetchUploadedFiles = async () => {\n    try {\n      console.log('Intentando obtener archivos para subjectId:', subjectId);\n      const {\n        data,\n        error\n      } = await supabase.from('files').select('*').eq('folder', selectedFolder).eq('subject_id', subjectId).order('created_at', {\n        ascending: false\n      });\n      if (error) {\n        console.error('Error al obtener archivos:', error);\n        throw error;\n      }\n      console.log('Archivos obtenidos:', data);\n      setUploadedFiles(data || []);\n    } catch (error) {\n      console.error('Error al cargar archivos:', error);\n      setError('Error al cargar los archivos');\n    }\n  };\n  const handleFileChange = event => {\n    if (!isAuthenticated) {\n      setError('Debes iniciar sesión para subir archivos');\n      return;\n    }\n    const selectedFiles = Array.from(event.target.files);\n    const validFiles = selectedFiles.filter(file => {\n      const validTypes = ['application/pdf', 'application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document', 'application/vnd.ms-powerpoint', 'application/vnd.openxmlformats-officedocument.presentationml.presentation', 'image/jpeg', 'image/png', 'image/gif'];\n      return validTypes.includes(file.type);\n    });\n    if (validFiles.length !== selectedFiles.length) {\n      setError('Algunos archivos no son válidos. Solo se permiten PDF, Word, PowerPoint e imágenes.');\n    }\n    setFiles(prevFiles => [...prevFiles, ...validFiles]);\n    setError(null);\n  };\n  const removeFile = index => {\n    setFiles(prevFiles => prevFiles.filter((_, i) => i !== index));\n  };\n  const handleUpload = async () => {\n    if (!isAuthenticated) {\n      setError('Debes iniciar sesión para subir archivos');\n      return;\n    }\n    if (files.length === 0) {\n      setError('Por favor, selecciona al menos un archivo');\n      return;\n    }\n    setUploading(true);\n    setError(null);\n    try {\n      // Verificar la sesión antes de subir\n      const {\n        data: {\n          session\n        },\n        error: sessionError\n      } = await supabase.auth.getSession();\n      if (sessionError) throw sessionError;\n      if (!session) throw new Error('No hay sesión activa');\n\n      // Subir cada archivo\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        const fileExt = file.name.split('.').pop();\n        const fileName = `${Math.random().toString(36).substring(2)}_${Date.now()}.${fileExt}`;\n        const filePath = `${selectedFolder}/${fileName}`;\n        setProgress(prev => ({\n          ...prev,\n          [fileName]: 0\n        }));\n\n        // Subir archivo al storage\n        const {\n          error: uploadError\n        } = await supabase.storage.from('documents').upload(filePath, file, {\n          cacheControl: '3600',\n          upsert: false\n        });\n        if (uploadError) {\n          console.error('Error al subir archivo:', uploadError);\n          throw new Error('Error al subir el archivo al almacenamiento');\n        }\n\n        // Obtener URL pública\n        const {\n          data: {\n            publicUrl\n          }\n        } = supabase.storage.from('documents').getPublicUrl(filePath);\n\n        // Guardar en la base de datos\n        const {\n          error: dbError\n        } = await supabase.from('files').insert([{\n          subject_id: subjectId,\n          name: file.name,\n          path: filePath,\n          type: file.type,\n          size: file.size,\n          folder: selectedFolder\n        }]);\n        if (dbError) {\n          console.error('Error al guardar en la base de datos:', dbError);\n          throw new Error('Error al guardar la información del archivo');\n        }\n        setProgress(prev => ({\n          ...prev,\n          [fileName]: 100\n        }));\n      }\n      await fetchUploadedFiles();\n      setFiles([]);\n      setProgress({});\n    } catch (error) {\n      console.error('Error al subir archivos:', error);\n      setError(error.message || 'Error al subir los archivos');\n    } finally {\n      setUploading(false);\n    }\n  };\n  const handleDelete = async fileId => {\n    if (!isAuthenticated) {\n      setError('Debes iniciar sesión para eliminar archivos');\n      return;\n    }\n    try {\n      const {\n        error\n      } = await supabase.from('files').delete().eq('id', fileId);\n      if (error) throw error;\n      await fetchUploadedFiles();\n    } catch (error) {\n      console.error('Error al eliminar archivo:', error);\n      setError('Error al eliminar el archivo');\n    }\n  };\n  const formatFileSize = bytes => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n  const handleViewFile = async file => {\n    try {\n      // Obtener la URL pública del archivo\n      const {\n        data: {\n          publicUrl\n        }\n      } = supabase.storage.from('documents').getPublicUrl(file.path);\n      setSelectedFile(publicUrl);\n      setShowPdfViewer(true);\n    } catch (error) {\n      console.error('Error al cargar el archivo:', error);\n      setError('Error al cargar el archivo para visualización');\n    }\n  };\n  const onDocumentLoadSuccess = ({\n    numPages\n  }) => {\n    setNumPages(numPages);\n    setPageNumber(1);\n  };\n  const changePage = offset => {\n    setPageNumber(prevPageNumber => prevPageNumber + offset);\n  };\n  const previousPage = () => changePage(-1);\n  const nextPage = () => changePage(1);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-upload-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-message\",\n        children: \"Verificando autenticaci\\xF3n...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 13\n    }, this);\n  }\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-upload-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: [\"Debes iniciar sesi\\xF3n para subir y gestionar archivos.\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate('/login'),\n          className: \"login-button\",\n          children: \"Ir a inicio de sesi\\xF3n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"file-upload-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"folder-selector\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"folder\",\n        children: \"Seleccionar carpeta:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"folder\",\n        value: selectedFolder,\n        onChange: e => setSelectedFolder(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"documents\",\n          children: \"Documentos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"assignments\",\n          children: \"Tareas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"resources\",\n          children: \"Recursos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        multiple: true,\n        onChange: handleFileChange,\n        accept: \".pdf,.doc,.docx,.ppt,.pptx,.jpg,.jpeg,.png,.gif\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpload,\n        disabled: uploading || files.length === 0,\n        className: \"upload-button\",\n        children: uploading ? 'Subiendo...' : 'Subir archivos'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"files-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Archivos subidos:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 17\n      }, this), uploadedFiles.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No hay archivos subidos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"files-grid\",\n        children: uploadedFiles.map(file => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: file.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Tama\\xF1o: \", formatFileSize(file.size)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Fecha: \", new Date(file.created_at).toLocaleDateString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleViewFile(file),\n              className: \"view-button\",\n              children: \"Ver\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDelete(file.id),\n              className: \"delete-button\",\n              children: \"Eliminar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 33\n          }, this)]\n        }, file.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 13\n    }, this), showPdfViewer && selectedFile && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pdf-viewer-modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pdf-viewer-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pdf-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: previousPage,\n            disabled: pageNumber <= 1,\n            children: \"Anterior\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"P\\xE1gina \", pageNumber, \" de \", numPages || '?']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: nextPage,\n            disabled: pageNumber >= (numPages || 1),\n            children: \"Siguiente\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowPdfViewer(false),\n            className: \"close-button\",\n            children: \"Cerrar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Document, {\n          file: selectedFile,\n          onLoadSuccess: onDocumentLoadSuccess,\n          onLoadError: error => {\n            console.error('Error al cargar el PDF:', error);\n            setError('Error al cargar el PDF. Por favor, intenta nuevamente.');\n            setShowPdfViewer(false);\n          },\n          loading: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pdf-loading\",\n            children: \"Cargando documento...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 33\n          }, this),\n          className: \"pdf-document\",\n          children: /*#__PURE__*/_jsxDEV(Page, {\n            pageNumber: pageNumber,\n            renderTextLayer: false,\n            renderAnnotationLayer: false,\n            loading: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pdf-loading\",\n              children: \"Cargando p\\xE1gina...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 17\n    }, this), files.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selected-files\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Archivos seleccionados:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"files-grid\",\n        children: files.map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: file.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Tama\\xF1o: \", formatFileSize(file.size)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => removeFile(index),\n            className: \"remove-button\",\n            children: \"Eliminar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 285,\n    columnNumber: 9\n  }, this);\n};\n_s(FileUpload, \"0MgW0ZqbOnydxAXigE653gshXbA=\", false, function () {\n  return [useNavigate];\n});\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","useEffect","supabase","useNavigate","Document","Page","pdfjs","jsxDEV","_jsxDEV","GlobalWorkerOptions","workerSrc","FileUpload","subjectId","session","sessionProp","_s","navigate","files","setFiles","uploadedFiles","setUploadedFiles","error","setError","uploading","setUploading","progress","setProgress","selectedFolder","setSelectedFolder","isAuthenticated","setIsAuthenticated","isLoading","setIsLoading","setSession","selectedFile","setSelectedFile","numPages","setNumPages","pageNumber","setPageNumber","showPdfViewer","setShowPdfViewer","checkAuth","fetchUploadedFiles","currentSession","data","auth","getSession","console","log","from","select","eq","order","ascending","handleFileChange","event","selectedFiles","Array","target","validFiles","filter","file","validTypes","includes","type","length","prevFiles","removeFile","index","_","i","handleUpload","sessionError","Error","fileExt","name","split","pop","fileName","Math","random","toString","substring","Date","now","filePath","prev","uploadError","storage","upload","cacheControl","upsert","publicUrl","getPublicUrl","dbError","insert","subject_id","path","size","folder","message","handleDelete","fileId","delete","formatFileSize","bytes","k","sizes","floor","parseFloat","pow","toFixed","handleViewFile","onDocumentLoadSuccess","changePage","offset","prevPageNumber","previousPage","nextPage","className","children","_jsxFileName","lineNumber","columnNumber","onClick","htmlFor","id","value","onChange","e","multiple","accept","disabled","map","created_at","toLocaleDateString","onLoadSuccess","onLoadError","loading","renderTextLayer","renderAnnotationLayer","_c","$RefreshReg$"],"sources":["C:/Users/bruno/Documents/UNIR/TFE/EDUIA/src/components/professor/FileUpload.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { supabase } from '../../config/supabaseClient';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Document, Page, pdfjs } from 'react-pdf';\r\nimport 'react-pdf/dist/esm/Page/AnnotationLayer.css';\r\nimport 'react-pdf/dist/esm/Page/TextLayer.css';\r\nimport './FileUpload.css';\r\n\r\n// Configurar el worker de PDF.js con la versión compatible\r\npdfjs.GlobalWorkerOptions.workerSrc = `//unpkg.com/pdfjs-dist@3.4.120/build/pdf.worker.min.js`;\r\n\r\nconst FileUpload = ({ subjectId, session: sessionProp }) => {\r\n    const navigate = useNavigate();\r\n    const [files, setFiles] = useState([]);\r\n    const [uploadedFiles, setUploadedFiles] = useState([]);\r\n    const [error, setError] = useState(null);\r\n    const [uploading, setUploading] = useState(false);\r\n    const [progress, setProgress] = useState({});\r\n    const [selectedFolder, setSelectedFolder] = useState('documents');\r\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [session, setSession] = useState(null);\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n    const [numPages, setNumPages] = useState(null);\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n    const [showPdfViewer, setShowPdfViewer] = useState(false);\r\n\r\n    useEffect(() => {\r\n        checkAuth();\r\n    }, [sessionProp]);\r\n\r\n    useEffect(() => {\r\n        if (isAuthenticated) {\r\n            fetchUploadedFiles();\r\n        }\r\n    }, [selectedFolder, subjectId, isAuthenticated]);\r\n\r\n    const checkAuth = async () => {\r\n        try {\r\n            setIsLoading(true);\r\n            let currentSession = sessionProp;\r\n            if (!currentSession) {\r\n                const { data: { session }, error } = await supabase.auth.getSession();\r\n                if (error) {\r\n                    console.error('Error al verificar sesión:', error);\r\n                    throw error;\r\n                }\r\n                currentSession = session;\r\n            }\r\n            console.log('[FileUpload] Sesión recibida:', currentSession);\r\n            setSession(currentSession);\r\n            if (!currentSession) {\r\n                console.log('[FileUpload] No hay sesión activa, redirigiendo a login...');\r\n                navigate('/login');\r\n                return;\r\n            }\r\n            setIsAuthenticated(true);\r\n        } catch (error) {\r\n            console.error('[FileUpload] Error checking auth:', error);\r\n            setIsAuthenticated(false);\r\n            navigate('/login');\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    const fetchUploadedFiles = async () => {\r\n        try {\r\n            console.log('Intentando obtener archivos para subjectId:', subjectId);\r\n            const { data, error } = await supabase\r\n                .from('files')\r\n                .select('*')\r\n                .eq('folder', selectedFolder)\r\n                .eq('subject_id', subjectId)\r\n                .order('created_at', { ascending: false });\r\n\r\n            if (error) {\r\n                console.error('Error al obtener archivos:', error);\r\n                throw error;\r\n            }\r\n            console.log('Archivos obtenidos:', data);\r\n            setUploadedFiles(data || []);\r\n        } catch (error) {\r\n            console.error('Error al cargar archivos:', error);\r\n            setError('Error al cargar los archivos');\r\n        }\r\n    };\r\n\r\n    const handleFileChange = (event) => {\r\n        if (!isAuthenticated) {\r\n            setError('Debes iniciar sesión para subir archivos');\r\n            return;\r\n        }\r\n\r\n        const selectedFiles = Array.from(event.target.files);\r\n        const validFiles = selectedFiles.filter(file => {\r\n            const validTypes = [\r\n                'application/pdf',\r\n                'application/msword',\r\n                'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\r\n                'application/vnd.ms-powerpoint',\r\n                'application/vnd.openxmlformats-officedocument.presentationml.presentation',\r\n                'image/jpeg',\r\n                'image/png',\r\n                'image/gif'\r\n            ];\r\n            return validTypes.includes(file.type);\r\n        });\r\n\r\n        if (validFiles.length !== selectedFiles.length) {\r\n            setError('Algunos archivos no son válidos. Solo se permiten PDF, Word, PowerPoint e imágenes.');\r\n        }\r\n\r\n        setFiles(prevFiles => [...prevFiles, ...validFiles]);\r\n        setError(null);\r\n    };\r\n\r\n    const removeFile = (index) => {\r\n        setFiles(prevFiles => prevFiles.filter((_, i) => i !== index));\r\n    };\r\n\r\n    const handleUpload = async () => {\r\n        if (!isAuthenticated) {\r\n            setError('Debes iniciar sesión para subir archivos');\r\n            return;\r\n        }\r\n\r\n        if (files.length === 0) {\r\n            setError('Por favor, selecciona al menos un archivo');\r\n            return;\r\n        }\r\n\r\n        setUploading(true);\r\n        setError(null);\r\n\r\n        try {\r\n            // Verificar la sesión antes de subir\r\n            const { data: { session }, error: sessionError } = await supabase.auth.getSession();\r\n            if (sessionError) throw sessionError;\r\n            if (!session) throw new Error('No hay sesión activa');\r\n\r\n            // Subir cada archivo\r\n            for (let i = 0; i < files.length; i++) {\r\n                const file = files[i];\r\n                const fileExt = file.name.split('.').pop();\r\n                const fileName = `${Math.random().toString(36).substring(2)}_${Date.now()}.${fileExt}`;\r\n                const filePath = `${selectedFolder}/${fileName}`;\r\n\r\n                setProgress(prev => ({ ...prev, [fileName]: 0 }));\r\n\r\n                // Subir archivo al storage\r\n                const { error: uploadError } = await supabase.storage\r\n                    .from('documents')\r\n                    .upload(filePath, file, {\r\n                        cacheControl: '3600',\r\n                        upsert: false\r\n                    });\r\n\r\n                if (uploadError) {\r\n                    console.error('Error al subir archivo:', uploadError);\r\n                    throw new Error('Error al subir el archivo al almacenamiento');\r\n                }\r\n\r\n                // Obtener URL pública\r\n                const { data: { publicUrl } } = supabase.storage\r\n                    .from('documents')\r\n                    .getPublicUrl(filePath);\r\n\r\n                // Guardar en la base de datos\r\n                const { error: dbError } = await supabase\r\n                    .from('files')\r\n                    .insert([\r\n                        {\r\n                            subject_id: subjectId,\r\n                            name: file.name,\r\n                            path: filePath,\r\n                            type: file.type,\r\n                            size: file.size,\r\n                            folder: selectedFolder\r\n                        }\r\n                    ]);\r\n\r\n                if (dbError) {\r\n                    console.error('Error al guardar en la base de datos:', dbError);\r\n                    throw new Error('Error al guardar la información del archivo');\r\n                }\r\n\r\n                setProgress(prev => ({ ...prev, [fileName]: 100 }));\r\n            }\r\n\r\n            await fetchUploadedFiles();\r\n            setFiles([]);\r\n            setProgress({});\r\n        } catch (error) {\r\n            console.error('Error al subir archivos:', error);\r\n            setError(error.message || 'Error al subir los archivos');\r\n        } finally {\r\n            setUploading(false);\r\n        }\r\n    };\r\n\r\n    const handleDelete = async (fileId) => {\r\n        if (!isAuthenticated) {\r\n            setError('Debes iniciar sesión para eliminar archivos');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const { error } = await supabase\r\n                .from('files')\r\n                .delete()\r\n                .eq('id', fileId);\r\n\r\n            if (error) throw error;\r\n\r\n            await fetchUploadedFiles();\r\n        } catch (error) {\r\n            console.error('Error al eliminar archivo:', error);\r\n            setError('Error al eliminar el archivo');\r\n        }\r\n    };\r\n\r\n    const formatFileSize = (bytes) => {\r\n        if (bytes === 0) return '0 Bytes';\r\n        const k = 1024;\r\n        const sizes = ['Bytes', 'KB', 'MB', 'GB'];\r\n        const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n        return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n    };\r\n\r\n    const handleViewFile = async (file) => {\r\n        try {\r\n            // Obtener la URL pública del archivo\r\n            const { data: { publicUrl } } = supabase.storage\r\n                .from('documents')\r\n                .getPublicUrl(file.path);\r\n\r\n            setSelectedFile(publicUrl);\r\n            setShowPdfViewer(true);\r\n        } catch (error) {\r\n            console.error('Error al cargar el archivo:', error);\r\n            setError('Error al cargar el archivo para visualización');\r\n        }\r\n    };\r\n\r\n    const onDocumentLoadSuccess = ({ numPages }) => {\r\n        setNumPages(numPages);\r\n        setPageNumber(1);\r\n    };\r\n\r\n    const changePage = (offset) => {\r\n        setPageNumber(prevPageNumber => prevPageNumber + offset);\r\n    };\r\n\r\n    const previousPage = () => changePage(-1);\r\n    const nextPage = () => changePage(1);\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <div className=\"file-upload-container\">\r\n                <div className=\"loading-message\">\r\n                    Verificando autenticación...\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (!isAuthenticated) {\r\n        return (\r\n            <div className=\"file-upload-container\">\r\n                <div className=\"error-message\">\r\n                    Debes iniciar sesión para subir y gestionar archivos.\r\n                    <button \r\n                        onClick={() => navigate('/login')}\r\n                        className=\"login-button\"\r\n                    >\r\n                        Ir a inicio de sesión\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"file-upload-container\">\r\n            <div className=\"folder-selector\">\r\n                <label htmlFor=\"folder\">Seleccionar carpeta:</label>\r\n                <select\r\n                    id=\"folder\"\r\n                    value={selectedFolder}\r\n                    onChange={(e) => setSelectedFolder(e.target.value)}\r\n                >\r\n                    <option value=\"documents\">Documentos</option>\r\n                    <option value=\"assignments\">Tareas</option>\r\n                    <option value=\"resources\">Recursos</option>\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"upload-section\">\r\n                <input\r\n                    type=\"file\"\r\n                    multiple\r\n                    onChange={handleFileChange}\r\n                    accept=\".pdf,.doc,.docx,.ppt,.pptx,.jpg,.jpeg,.png,.gif\"\r\n                />\r\n                <button \r\n                    onClick={handleUpload}\r\n                    disabled={uploading || files.length === 0}\r\n                    className=\"upload-button\"\r\n                >\r\n                    {uploading ? 'Subiendo...' : 'Subir archivos'}\r\n                </button>\r\n            </div>\r\n\r\n            {error && <div className=\"error-message\">{error}</div>}\r\n\r\n            <div className=\"files-list\">\r\n                <h3>Archivos subidos:</h3>\r\n                {uploadedFiles.length === 0 ? (\r\n                    <p>No hay archivos subidos</p>\r\n                ) : (\r\n                    <div className=\"files-grid\">\r\n                        {uploadedFiles.map((file) => (\r\n                            <div key={file.id} className=\"file-card\">\r\n                                <div className=\"file-info\">\r\n                                    <h4>{file.name}</h4>\r\n                                    <p>Tamaño: {formatFileSize(file.size)}</p>\r\n                                    <p>Fecha: {new Date(file.created_at).toLocaleDateString()}</p>\r\n                                </div>\r\n                                <div className=\"file-actions\">\r\n                                    <button \r\n                                        onClick={() => handleViewFile(file)}\r\n                                        className=\"view-button\"\r\n                                    >\r\n                                        Ver\r\n                                    </button>\r\n                                    <button \r\n                                        onClick={() => handleDelete(file.id)}\r\n                                        className=\"delete-button\"\r\n                                    >\r\n                                        Eliminar\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {showPdfViewer && selectedFile && (\r\n                <div className=\"pdf-viewer-modal\">\r\n                    <div className=\"pdf-viewer-content\">\r\n                        <div className=\"pdf-controls\">\r\n                            <button onClick={previousPage} disabled={pageNumber <= 1}>\r\n                                Anterior\r\n                            </button>\r\n                            <span>\r\n                                Página {pageNumber} de {numPages || '?'}\r\n                            </span>\r\n                            <button onClick={nextPage} disabled={pageNumber >= (numPages || 1)}>\r\n                                Siguiente\r\n                            </button>\r\n                            <button \r\n                                onClick={() => setShowPdfViewer(false)}\r\n                                className=\"close-button\"\r\n                            >\r\n                                Cerrar\r\n                            </button>\r\n                        </div>\r\n                        <Document\r\n                            file={selectedFile}\r\n                            onLoadSuccess={onDocumentLoadSuccess}\r\n                            onLoadError={(error) => {\r\n                                console.error('Error al cargar el PDF:', error);\r\n                                setError('Error al cargar el PDF. Por favor, intenta nuevamente.');\r\n                                setShowPdfViewer(false);\r\n                            }}\r\n                            loading={\r\n                                <div className=\"pdf-loading\">\r\n                                    Cargando documento...\r\n                                </div>\r\n                            }\r\n                            className=\"pdf-document\"\r\n                        >\r\n                            <Page \r\n                                pageNumber={pageNumber} \r\n                                renderTextLayer={false}\r\n                                renderAnnotationLayer={false}\r\n                                loading={\r\n                                    <div className=\"pdf-loading\">\r\n                                        Cargando página...\r\n                                    </div>\r\n                                }\r\n                            />\r\n                        </Document>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {files.length > 0 && (\r\n                <div className=\"selected-files\">\r\n                    <h3>Archivos seleccionados:</h3>\r\n                    <div className=\"files-grid\">\r\n                        {files.map((file, index) => (\r\n                            <div key={index} className=\"file-card\">\r\n                                <div className=\"file-info\">\r\n                                    <h4>{file.name}</h4>\r\n                                    <p>Tamaño: {formatFileSize(file.size)}</p>\r\n                                </div>\r\n                                <button \r\n                                    onClick={() => removeFile(index)}\r\n                                    className=\"remove-button\"\r\n                                >\r\n                                    Eliminar\r\n                                </button>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FileUpload; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,6BAA6B;AACtD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,QAAQ,EAAEC,IAAI,EAAEC,KAAK,QAAQ,WAAW;AACjD,OAAO,6CAA6C;AACpD,OAAO,uCAAuC;AAC9C,OAAO,kBAAkB;;AAEzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACAF,KAAK,CAACG,mBAAmB,CAACC,SAAS,GAAG,wDAAwD;AAE9F,MAAMC,UAAU,GAAGA,CAAC;EAAEC,SAAS;EAAEC,OAAO,EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EACxD,MAAMC,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACmB,aAAa,EAAEC,gBAAgB,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACqB,KAAK,EAAEC,QAAQ,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACuB,SAAS,EAAEC,YAAY,CAAC,GAAGxB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACyB,QAAQ,EAAEC,WAAW,CAAC,GAAG1B,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC5C,MAAM,CAAC2B,cAAc,EAAEC,iBAAiB,CAAC,GAAG5B,QAAQ,CAAC,WAAW,CAAC;EACjE,MAAM,CAAC6B,eAAe,EAAEC,kBAAkB,CAAC,GAAG9B,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAAC+B,SAAS,EAAEC,YAAY,CAAC,GAAGhC,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACa,OAAO,EAAEoB,UAAU,CAAC,GAAGjC,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACkC,YAAY,EAAEC,eAAe,CAAC,GAAGnC,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACoC,QAAQ,EAAEC,WAAW,CAAC,GAAGrC,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACsC,UAAU,EAAEC,aAAa,CAAC,GAAGvC,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACwC,aAAa,EAAEC,gBAAgB,CAAC,GAAGzC,QAAQ,CAAC,KAAK,CAAC;EAEzDC,SAAS,CAAC,MAAM;IACZyC,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,CAAC5B,WAAW,CAAC,CAAC;EAEjBb,SAAS,CAAC,MAAM;IACZ,IAAI4B,eAAe,EAAE;MACjBc,kBAAkB,CAAC,CAAC;IACxB;EACJ,CAAC,EAAE,CAAChB,cAAc,EAAEf,SAAS,EAAEiB,eAAe,CAAC,CAAC;EAEhD,MAAMa,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC1B,IAAI;MACAV,YAAY,CAAC,IAAI,CAAC;MAClB,IAAIY,cAAc,GAAG9B,WAAW;MAChC,IAAI,CAAC8B,cAAc,EAAE;QACjB,MAAM;UAAEC,IAAI,EAAE;YAAEhC;UAAQ,CAAC;UAAEQ;QAAM,CAAC,GAAG,MAAMnB,QAAQ,CAAC4C,IAAI,CAACC,UAAU,CAAC,CAAC;QACrE,IAAI1B,KAAK,EAAE;UACP2B,OAAO,CAAC3B,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;UAClD,MAAMA,KAAK;QACf;QACAuB,cAAc,GAAG/B,OAAO;MAC5B;MACAmC,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEL,cAAc,CAAC;MAC5DX,UAAU,CAACW,cAAc,CAAC;MAC1B,IAAI,CAACA,cAAc,EAAE;QACjBI,OAAO,CAACC,GAAG,CAAC,4DAA4D,CAAC;QACzEjC,QAAQ,CAAC,QAAQ,CAAC;QAClB;MACJ;MACAc,kBAAkB,CAAC,IAAI,CAAC;IAC5B,CAAC,CAAC,OAAOT,KAAK,EAAE;MACZ2B,OAAO,CAAC3B,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;MACzDS,kBAAkB,CAAC,KAAK,CAAC;MACzBd,QAAQ,CAAC,QAAQ,CAAC;IACtB,CAAC,SAAS;MACNgB,YAAY,CAAC,KAAK,CAAC;IACvB;EACJ,CAAC;EAED,MAAMW,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACAK,OAAO,CAACC,GAAG,CAAC,6CAA6C,EAAErC,SAAS,CAAC;MACrE,MAAM;QAAEiC,IAAI;QAAExB;MAAM,CAAC,GAAG,MAAMnB,QAAQ,CACjCgD,IAAI,CAAC,OAAO,CAAC,CACbC,MAAM,CAAC,GAAG,CAAC,CACXC,EAAE,CAAC,QAAQ,EAAEzB,cAAc,CAAC,CAC5ByB,EAAE,CAAC,YAAY,EAAExC,SAAS,CAAC,CAC3ByC,KAAK,CAAC,YAAY,EAAE;QAAEC,SAAS,EAAE;MAAM,CAAC,CAAC;MAE9C,IAAIjC,KAAK,EAAE;QACP2B,OAAO,CAAC3B,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;QAClD,MAAMA,KAAK;MACf;MACA2B,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEJ,IAAI,CAAC;MACxCzB,gBAAgB,CAACyB,IAAI,IAAI,EAAE,CAAC;IAChC,CAAC,CAAC,OAAOxB,KAAK,EAAE;MACZ2B,OAAO,CAAC3B,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjDC,QAAQ,CAAC,8BAA8B,CAAC;IAC5C;EACJ,CAAC;EAED,MAAMiC,gBAAgB,GAAIC,KAAK,IAAK;IAChC,IAAI,CAAC3B,eAAe,EAAE;MAClBP,QAAQ,CAAC,0CAA0C,CAAC;MACpD;IACJ;IAEA,MAAMmC,aAAa,GAAGC,KAAK,CAACR,IAAI,CAACM,KAAK,CAACG,MAAM,CAAC1C,KAAK,CAAC;IACpD,MAAM2C,UAAU,GAAGH,aAAa,CAACI,MAAM,CAACC,IAAI,IAAI;MAC5C,MAAMC,UAAU,GAAG,CACf,iBAAiB,EACjB,oBAAoB,EACpB,yEAAyE,EACzE,+BAA+B,EAC/B,2EAA2E,EAC3E,YAAY,EACZ,WAAW,EACX,WAAW,CACd;MACD,OAAOA,UAAU,CAACC,QAAQ,CAACF,IAAI,CAACG,IAAI,CAAC;IACzC,CAAC,CAAC;IAEF,IAAIL,UAAU,CAACM,MAAM,KAAKT,aAAa,CAACS,MAAM,EAAE;MAC5C5C,QAAQ,CAAC,qFAAqF,CAAC;IACnG;IAEAJ,QAAQ,CAACiD,SAAS,IAAI,CAAC,GAAGA,SAAS,EAAE,GAAGP,UAAU,CAAC,CAAC;IACpDtC,QAAQ,CAAC,IAAI,CAAC;EAClB,CAAC;EAED,MAAM8C,UAAU,GAAIC,KAAK,IAAK;IAC1BnD,QAAQ,CAACiD,SAAS,IAAIA,SAAS,CAACN,MAAM,CAAC,CAACS,CAAC,EAAEC,CAAC,KAAKA,CAAC,KAAKF,KAAK,CAAC,CAAC;EAClE,CAAC;EAED,MAAMG,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI,CAAC3C,eAAe,EAAE;MAClBP,QAAQ,CAAC,0CAA0C,CAAC;MACpD;IACJ;IAEA,IAAIL,KAAK,CAACiD,MAAM,KAAK,CAAC,EAAE;MACpB5C,QAAQ,CAAC,2CAA2C,CAAC;MACrD;IACJ;IAEAE,YAAY,CAAC,IAAI,CAAC;IAClBF,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACA;MACA,MAAM;QAAEuB,IAAI,EAAE;UAAEhC;QAAQ,CAAC;QAAEQ,KAAK,EAAEoD;MAAa,CAAC,GAAG,MAAMvE,QAAQ,CAAC4C,IAAI,CAACC,UAAU,CAAC,CAAC;MACnF,IAAI0B,YAAY,EAAE,MAAMA,YAAY;MACpC,IAAI,CAAC5D,OAAO,EAAE,MAAM,IAAI6D,KAAK,CAAC,sBAAsB,CAAC;;MAErD;MACA,KAAK,IAAIH,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGtD,KAAK,CAACiD,MAAM,EAAEK,CAAC,EAAE,EAAE;QACnC,MAAMT,IAAI,GAAG7C,KAAK,CAACsD,CAAC,CAAC;QACrB,MAAMI,OAAO,GAAGb,IAAI,CAACc,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,CAAC;QAC1C,MAAMC,QAAQ,GAAG,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,SAAS,CAAC,CAAC,CAAC,IAAIC,IAAI,CAACC,GAAG,CAAC,CAAC,IAAIV,OAAO,EAAE;QACtF,MAAMW,QAAQ,GAAG,GAAG3D,cAAc,IAAIoD,QAAQ,EAAE;QAEhDrD,WAAW,CAAC6D,IAAI,KAAK;UAAE,GAAGA,IAAI;UAAE,CAACR,QAAQ,GAAG;QAAE,CAAC,CAAC,CAAC;;QAEjD;QACA,MAAM;UAAE1D,KAAK,EAAEmE;QAAY,CAAC,GAAG,MAAMtF,QAAQ,CAACuF,OAAO,CAChDvC,IAAI,CAAC,WAAW,CAAC,CACjBwC,MAAM,CAACJ,QAAQ,EAAExB,IAAI,EAAE;UACpB6B,YAAY,EAAE,MAAM;UACpBC,MAAM,EAAE;QACZ,CAAC,CAAC;QAEN,IAAIJ,WAAW,EAAE;UACbxC,OAAO,CAAC3B,KAAK,CAAC,yBAAyB,EAAEmE,WAAW,CAAC;UACrD,MAAM,IAAId,KAAK,CAAC,6CAA6C,CAAC;QAClE;;QAEA;QACA,MAAM;UAAE7B,IAAI,EAAE;YAAEgD;UAAU;QAAE,CAAC,GAAG3F,QAAQ,CAACuF,OAAO,CAC3CvC,IAAI,CAAC,WAAW,CAAC,CACjB4C,YAAY,CAACR,QAAQ,CAAC;;QAE3B;QACA,MAAM;UAAEjE,KAAK,EAAE0E;QAAQ,CAAC,GAAG,MAAM7F,QAAQ,CACpCgD,IAAI,CAAC,OAAO,CAAC,CACb8C,MAAM,CAAC,CACJ;UACIC,UAAU,EAAErF,SAAS;UACrBgE,IAAI,EAAEd,IAAI,CAACc,IAAI;UACfsB,IAAI,EAAEZ,QAAQ;UACdrB,IAAI,EAAEH,IAAI,CAACG,IAAI;UACfkC,IAAI,EAAErC,IAAI,CAACqC,IAAI;UACfC,MAAM,EAAEzE;QACZ,CAAC,CACJ,CAAC;QAEN,IAAIoE,OAAO,EAAE;UACT/C,OAAO,CAAC3B,KAAK,CAAC,uCAAuC,EAAE0E,OAAO,CAAC;UAC/D,MAAM,IAAIrB,KAAK,CAAC,6CAA6C,CAAC;QAClE;QAEAhD,WAAW,CAAC6D,IAAI,KAAK;UAAE,GAAGA,IAAI;UAAE,CAACR,QAAQ,GAAG;QAAI,CAAC,CAAC,CAAC;MACvD;MAEA,MAAMpC,kBAAkB,CAAC,CAAC;MAC1BzB,QAAQ,CAAC,EAAE,CAAC;MACZQ,WAAW,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC,CAAC,OAAOL,KAAK,EAAE;MACZ2B,OAAO,CAAC3B,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChDC,QAAQ,CAACD,KAAK,CAACgF,OAAO,IAAI,6BAA6B,CAAC;IAC5D,CAAC,SAAS;MACN7E,YAAY,CAAC,KAAK,CAAC;IACvB;EACJ,CAAC;EAED,MAAM8E,YAAY,GAAG,MAAOC,MAAM,IAAK;IACnC,IAAI,CAAC1E,eAAe,EAAE;MAClBP,QAAQ,CAAC,6CAA6C,CAAC;MACvD;IACJ;IAEA,IAAI;MACA,MAAM;QAAED;MAAM,CAAC,GAAG,MAAMnB,QAAQ,CAC3BgD,IAAI,CAAC,OAAO,CAAC,CACbsD,MAAM,CAAC,CAAC,CACRpD,EAAE,CAAC,IAAI,EAAEmD,MAAM,CAAC;MAErB,IAAIlF,KAAK,EAAE,MAAMA,KAAK;MAEtB,MAAMsB,kBAAkB,CAAC,CAAC;IAC9B,CAAC,CAAC,OAAOtB,KAAK,EAAE;MACZ2B,OAAO,CAAC3B,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClDC,QAAQ,CAAC,8BAA8B,CAAC;IAC5C;EACJ,CAAC;EAED,MAAMmF,cAAc,GAAIC,KAAK,IAAK;IAC9B,IAAIA,KAAK,KAAK,CAAC,EAAE,OAAO,SAAS;IACjC,MAAMC,CAAC,GAAG,IAAI;IACd,MAAMC,KAAK,GAAG,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;IACzC,MAAMrC,CAAC,GAAGS,IAAI,CAAC6B,KAAK,CAAC7B,IAAI,CAAC/B,GAAG,CAACyD,KAAK,CAAC,GAAG1B,IAAI,CAAC/B,GAAG,CAAC0D,CAAC,CAAC,CAAC;IACnD,OAAOG,UAAU,CAAC,CAACJ,KAAK,GAAG1B,IAAI,CAAC+B,GAAG,CAACJ,CAAC,EAAEpC,CAAC,CAAC,EAAEyC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAGJ,KAAK,CAACrC,CAAC,CAAC;EAC3E,CAAC;EAED,MAAM0C,cAAc,GAAG,MAAOnD,IAAI,IAAK;IACnC,IAAI;MACA;MACA,MAAM;QAAEjB,IAAI,EAAE;UAAEgD;QAAU;MAAE,CAAC,GAAG3F,QAAQ,CAACuF,OAAO,CAC3CvC,IAAI,CAAC,WAAW,CAAC,CACjB4C,YAAY,CAAChC,IAAI,CAACoC,IAAI,CAAC;MAE5B/D,eAAe,CAAC0D,SAAS,CAAC;MAC1BpD,gBAAgB,CAAC,IAAI,CAAC;IAC1B,CAAC,CAAC,OAAOpB,KAAK,EAAE;MACZ2B,OAAO,CAAC3B,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnDC,QAAQ,CAAC,+CAA+C,CAAC;IAC7D;EACJ,CAAC;EAED,MAAM4F,qBAAqB,GAAGA,CAAC;IAAE9E;EAAS,CAAC,KAAK;IAC5CC,WAAW,CAACD,QAAQ,CAAC;IACrBG,aAAa,CAAC,CAAC,CAAC;EACpB,CAAC;EAED,MAAM4E,UAAU,GAAIC,MAAM,IAAK;IAC3B7E,aAAa,CAAC8E,cAAc,IAAIA,cAAc,GAAGD,MAAM,CAAC;EAC5D,CAAC;EAED,MAAME,YAAY,GAAGA,CAAA,KAAMH,UAAU,CAAC,CAAC,CAAC,CAAC;EACzC,MAAMI,QAAQ,GAAGA,CAAA,KAAMJ,UAAU,CAAC,CAAC,CAAC;EAEpC,IAAIpF,SAAS,EAAE;IACX,oBACIvB,OAAA;MAAKgH,SAAS,EAAC,uBAAuB;MAAAC,QAAA,eAClCjH,OAAA;QAAKgH,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAAC;MAEjC;QAAA1C,QAAA,EAAA2C,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAA7C,QAAA,EAAA2C,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAEd;EAEA,IAAI,CAAC/F,eAAe,EAAE;IAClB,oBACIrB,OAAA;MAAKgH,SAAS,EAAC,uBAAuB;MAAAC,QAAA,eAClCjH,OAAA;QAAKgH,SAAS,EAAC,eAAe;QAAAC,QAAA,GAAC,0DAE3B,eAAAjH,OAAA;UACIqH,OAAO,EAAEA,CAAA,KAAM7G,QAAQ,CAAC,QAAQ,CAAE;UAClCwG,SAAS,EAAC,cAAc;UAAAC,QAAA,EAC3B;QAED;UAAA1C,QAAA,EAAA2C,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAA7C,QAAA,EAAA2C,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR;IAAC;MAAA7C,QAAA,EAAA2C,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAEd;EAEA,oBACIpH,OAAA;IAAKgH,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBAClCjH,OAAA;MAAKgH,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC5BjH,OAAA;QAAOsH,OAAO,EAAC,QAAQ;QAAAL,QAAA,EAAC;MAAoB;QAAA1C,QAAA,EAAA2C,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACpDpH,OAAA;QACIuH,EAAE,EAAC,QAAQ;QACXC,KAAK,EAAErG,cAAe;QACtBsG,QAAQ,EAAGC,CAAC,IAAKtG,iBAAiB,CAACsG,CAAC,CAACvE,MAAM,CAACqE,KAAK,CAAE;QAAAP,QAAA,gBAEnDjH,OAAA;UAAQwH,KAAK,EAAC,WAAW;UAAAP,QAAA,EAAC;QAAU;UAAA1C,QAAA,EAAA2C,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC7CpH,OAAA;UAAQwH,KAAK,EAAC,aAAa;UAAAP,QAAA,EAAC;QAAM;UAAA1C,QAAA,EAAA2C,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC3CpH,OAAA;UAAQwH,KAAK,EAAC,WAAW;UAAAP,QAAA,EAAC;QAAQ;UAAA1C,QAAA,EAAA2C,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAA7C,QAAA,EAAA2C,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvC,CAAC;IAAA;MAAA7C,QAAA,EAAA2C,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,eAENpH,OAAA;MAAKgH,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC3BjH,OAAA;QACIyD,IAAI,EAAC,MAAM;QACXkE,QAAQ;QACRF,QAAQ,EAAE1E,gBAAiB;QAC3B6E,MAAM,EAAC;MAAiD;QAAArD,QAAA,EAAA2C,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3D,CAAC,eACFpH,OAAA;QACIqH,OAAO,EAAErD,YAAa;QACtB6D,QAAQ,EAAE9G,SAAS,IAAIN,KAAK,CAACiD,MAAM,KAAK,CAAE;QAC1CsD,SAAS,EAAC,eAAe;QAAAC,QAAA,EAExBlG,SAAS,GAAG,aAAa,GAAG;MAAgB;QAAAwD,QAAA,EAAA2C,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC,CAAC;IAAA;MAAA7C,QAAA,EAAA2C,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,EAELvG,KAAK,iBAAIb,OAAA;MAAKgH,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAEpG;IAAK;MAAA0D,QAAA,EAAA2C,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAEtDpH,OAAA;MAAKgH,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACvBjH,OAAA;QAAAiH,QAAA,EAAI;MAAiB;QAAA1C,QAAA,EAAA2C,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACzBzG,aAAa,CAAC+C,MAAM,KAAK,CAAC,gBACvB1D,OAAA;QAAAiH,QAAA,EAAG;MAAuB;QAAA1C,QAAA,EAAA2C,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,gBAE9BpH,OAAA;QAAKgH,SAAS,EAAC,YAAY;QAAAC,QAAA,EACtBtG,aAAa,CAACmH,GAAG,CAAExE,IAAI,iBACpBtD,OAAA;UAAmBgH,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACpCjH,OAAA;YAAKgH,SAAS,EAAC,WAAW;YAAAC,QAAA,gBACtBjH,OAAA;cAAAiH,QAAA,EAAK3D,IAAI,CAACc;YAAI;cAAAG,QAAA,EAAA2C,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACpBpH,OAAA;cAAAiH,QAAA,GAAG,aAAQ,EAAChB,cAAc,CAAC3C,IAAI,CAACqC,IAAI,CAAC;YAAA;cAAApB,QAAA,EAAA2C,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC1CpH,OAAA;cAAAiH,QAAA,GAAG,SAAO,EAAC,IAAIrC,IAAI,CAACtB,IAAI,CAACyE,UAAU,CAAC,CAACC,kBAAkB,CAAC,CAAC;YAAA;cAAAzD,QAAA,EAAA2C,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAA7C,QAAA,EAAA2C,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7D,CAAC,eACNpH,OAAA;YAAKgH,SAAS,EAAC,cAAc;YAAAC,QAAA,gBACzBjH,OAAA;cACIqH,OAAO,EAAEA,CAAA,KAAMZ,cAAc,CAACnD,IAAI,CAAE;cACpC0D,SAAS,EAAC,aAAa;cAAAC,QAAA,EAC1B;YAED;cAAA1C,QAAA,EAAA2C,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACTpH,OAAA;cACIqH,OAAO,EAAEA,CAAA,KAAMvB,YAAY,CAACxC,IAAI,CAACiE,EAAE,CAAE;cACrCP,SAAS,EAAC,eAAe;cAAAC,QAAA,EAC5B;YAED;cAAA1C,QAAA,EAAA2C,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAA7C,QAAA,EAAA2C,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACR,CAAC;QAAA,GAnBA9D,IAAI,CAACiE,EAAE;UAAAhD,QAAA,EAAA2C,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAoBZ,CACR;MAAC;QAAA7C,QAAA,EAAA2C,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CACR;IAAA;MAAA7C,QAAA,EAAA2C,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,EAELpF,aAAa,IAAIN,YAAY,iBAC1B1B,OAAA;MAAKgH,SAAS,EAAC,kBAAkB;MAAAC,QAAA,eAC7BjH,OAAA;QAAKgH,SAAS,EAAC,oBAAoB;QAAAC,QAAA,gBAC/BjH,OAAA;UAAKgH,SAAS,EAAC,cAAc;UAAAC,QAAA,gBACzBjH,OAAA;YAAQqH,OAAO,EAAEP,YAAa;YAACe,QAAQ,EAAE/F,UAAU,IAAI,CAAE;YAAAmF,QAAA,EAAC;UAE1D;YAAA1C,QAAA,EAAA2C,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTpH,OAAA;YAAAiH,QAAA,GAAM,YACK,EAACnF,UAAU,EAAC,MAAI,EAACF,QAAQ,IAAI,GAAG;UAAA;YAAA2C,QAAA,EAAA2C,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrC,CAAC,eACPpH,OAAA;YAAQqH,OAAO,EAAEN,QAAS;YAACc,QAAQ,EAAE/F,UAAU,KAAKF,QAAQ,IAAI,CAAC,CAAE;YAAAqF,QAAA,EAAC;UAEpE;YAAA1C,QAAA,EAAA2C,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTpH,OAAA;YACIqH,OAAO,EAAEA,CAAA,KAAMpF,gBAAgB,CAAC,KAAK,CAAE;YACvC+E,SAAS,EAAC,cAAc;YAAAC,QAAA,EAC3B;UAED;YAAA1C,QAAA,EAAA2C,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAA7C,QAAA,EAAA2C,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CAAC,eACNpH,OAAA,CAACJ,QAAQ;UACL0D,IAAI,EAAE5B,YAAa;UACnBuG,aAAa,EAAEvB,qBAAsB;UACrCwB,WAAW,EAAGrH,KAAK,IAAK;YACpB2B,OAAO,CAAC3B,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;YAC/CC,QAAQ,CAAC,wDAAwD,CAAC;YAClEmB,gBAAgB,CAAC,KAAK,CAAC;UAC3B,CAAE;UACFkG,OAAO,eACHnI,OAAA;YAAKgH,SAAS,EAAC,aAAa;YAAAC,QAAA,EAAC;UAE7B;YAAA1C,QAAA,EAAA2C,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CACR;UACDJ,SAAS,EAAC,cAAc;UAAAC,QAAA,eAExBjH,OAAA,CAACH,IAAI;YACDiC,UAAU,EAAEA,UAAW;YACvBsG,eAAe,EAAE,KAAM;YACvBC,qBAAqB,EAAE,KAAM;YAC7BF,OAAO,eACHnI,OAAA;cAAKgH,SAAS,EAAC,aAAa;cAAAC,QAAA,EAAC;YAE7B;cAAA1C,QAAA,EAAA2C,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK;UACR;YAAA7C,QAAA,EAAA2C,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ;QAAC;UAAA7C,QAAA,EAAA2C,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC;MAAA;QAAA7C,QAAA,EAAA2C,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV;IAAC;MAAA7C,QAAA,EAAA2C,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CACR,EAEA3G,KAAK,CAACiD,MAAM,GAAG,CAAC,iBACb1D,OAAA;MAAKgH,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC3BjH,OAAA;QAAAiH,QAAA,EAAI;MAAuB;QAAA1C,QAAA,EAAA2C,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChCpH,OAAA;QAAKgH,SAAS,EAAC,YAAY;QAAAC,QAAA,EACtBxG,KAAK,CAACqH,GAAG,CAAC,CAACxE,IAAI,EAAEO,KAAK,kBACnB7D,OAAA;UAAiBgH,SAAS,EAAC,WAAW;UAAAC,QAAA,gBAClCjH,OAAA;YAAKgH,SAAS,EAAC,WAAW;YAAAC,QAAA,gBACtBjH,OAAA;cAAAiH,QAAA,EAAK3D,IAAI,CAACc;YAAI;cAAAG,QAAA,EAAA2C,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACpBpH,OAAA;cAAAiH,QAAA,GAAG,aAAQ,EAAChB,cAAc,CAAC3C,IAAI,CAACqC,IAAI,CAAC;YAAA;cAAApB,QAAA,EAAA2C,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAA7C,QAAA,EAAA2C,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzC,CAAC,eACNpH,OAAA;YACIqH,OAAO,EAAEA,CAAA,KAAMzD,UAAU,CAACC,KAAK,CAAE;YACjCmD,SAAS,EAAC,eAAe;YAAAC,QAAA,EAC5B;UAED;YAAA1C,QAAA,EAAA2C,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,GAVHvD,KAAK;UAAAU,QAAA,EAAA2C,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAWV,CACR;MAAC;QAAA7C,QAAA,EAAA2C,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAA7C,QAAA,EAAA2C,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CACR;EAAA;IAAA7C,QAAA,EAAA2C,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAC7G,EAAA,CA3ZIJ,UAAU;EAAA,QACKR,WAAW;AAAA;AAAA2I,EAAA,GAD1BnI,UAAU;AA6ZhB,eAAeA,UAAU;AAAC,IAAAmI,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}