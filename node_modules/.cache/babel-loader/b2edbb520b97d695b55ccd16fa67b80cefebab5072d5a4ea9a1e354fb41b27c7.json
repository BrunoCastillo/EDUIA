{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bruno\\\\Documents\\\\UNIR\\\\TFE\\\\EDUIA\\\\src\\\\components\\\\professor\\\\SyllabusUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { supabase } from '../../config/supabaseClient';\nimport './SyllabusUpload.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SyllabusUpload = ({\n  subjectId\n}) => {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [error, setError] = useState(null);\n  const [uploading, setUploading] = useState(false);\n  const [progress, setProgress] = useState({});\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  useEffect(() => {\n    checkAuth();\n    fetchUploadedFiles();\n  }, [subjectId]);\n  const checkAuth = async () => {\n    try {\n      const {\n        data: {\n          session\n        },\n        error\n      } = await supabase.auth.getSession();\n      console.log('Estado de la sesión:', session);\n      if (error) {\n        console.error('Error al verificar sesión:', error);\n        throw error;\n      }\n      setIsAuthenticated(!!session);\n    } catch (error) {\n      console.error('Error checking auth:', error);\n      setIsAuthenticated(false);\n    }\n  };\n  const fetchUploadedFiles = async () => {\n    try {\n      console.log('Intentando obtener archivos para subjectId:', subjectId);\n      const {\n        data,\n        error\n      } = await supabase.from('syllabi').select('*').eq('subject_id', subjectId);\n      if (error) {\n        console.error('Error al obtener archivos:', error);\n        throw error;\n      }\n      console.log('Archivos obtenidos:', data);\n      setUploadedFiles(data || []);\n    } catch (error) {\n      console.error('Error fetching files:', error);\n      setError('Error al cargar los archivos');\n    }\n  };\n  const handleFileChange = event => {\n    if (!isAuthenticated) {\n      setError('Debes iniciar sesión para subir archivos');\n      return;\n    }\n    const selectedFiles = Array.from(event.target.files);\n    const validFiles = selectedFiles.filter(file => {\n      const validTypes = ['application/pdf', 'application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document', 'application/vnd.ms-powerpoint', 'application/vnd.openxmlformats-officedocument.presentationml.presentation'];\n      return validTypes.includes(file.type);\n    });\n    if (validFiles.length !== selectedFiles.length) {\n      setError('Algunos archivos no son válidos. Solo se permiten PDF, Word y PowerPoint.');\n    }\n    setFiles(prevFiles => [...prevFiles, ...validFiles]);\n    setError(null);\n  };\n  const removeFile = index => {\n    setFiles(prevFiles => prevFiles.filter((_, i) => i !== index));\n  };\n  const handleUpload = async () => {\n    if (!isAuthenticated) {\n      setError('Debes iniciar sesión para subir archivos');\n      return;\n    }\n    if (files.length === 0) {\n      setError('Por favor, selecciona al menos un archivo');\n      return;\n    }\n    setUploading(true);\n    setError(null);\n    try {\n      // Verificar la sesión antes de subir\n      const {\n        data: {\n          session\n        },\n        error: sessionError\n      } = await supabase.auth.getSession();\n      if (sessionError) throw sessionError;\n      if (!session) throw new Error('No hay sesión activa');\n\n      // Subir cada archivo\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        const fileExt = file.name.split('.').pop();\n        const fileName = `${Math.random().toString(36).substring(2)}_${Date.now()}.${fileExt}`;\n        const filePath = `syllabi/${fileName}`;\n        setProgress(prev => ({\n          ...prev,\n          [fileName]: 0\n        }));\n\n        // Subir archivo al storage\n        const {\n          error: uploadError\n        } = await supabase.storage.from('documents').upload(filePath, file, {\n          cacheControl: '3600',\n          upsert: false\n        });\n        if (uploadError) {\n          console.error('Error al subir archivo:', uploadError);\n          throw new Error('Error al subir el archivo al almacenamiento');\n        }\n\n        // Obtener URL pública\n        const {\n          data: {\n            publicUrl\n          }\n        } = supabase.storage.from('documents').getPublicUrl(filePath);\n\n        // Guardar en la base de datos\n        const {\n          error: dbError\n        } = await supabase.from('syllabi').insert([{\n          subject_id: subjectId,\n          file_name: file.name,\n          file_url: publicUrl,\n          file_type: file.type,\n          file_size: file.size\n        }]);\n        if (dbError) {\n          console.error('Error al guardar en la base de datos:', dbError);\n          throw new Error('Error al guardar la información del archivo');\n        }\n        setProgress(prev => ({\n          ...prev,\n          [fileName]: 100\n        }));\n      }\n      await fetchUploadedFiles();\n      setFiles([]);\n      setProgress({});\n    } catch (error) {\n      console.error('Error uploading files:', error);\n      setError(error.message || 'Error al subir los archivos');\n    } finally {\n      setUploading(false);\n    }\n  };\n  const handleDelete = async fileId => {\n    if (!isAuthenticated) {\n      setError('Debes iniciar sesión para eliminar archivos');\n      return;\n    }\n    try {\n      const {\n        error\n      } = await supabase.from('syllabi').delete().eq('id', fileId);\n      if (error) throw error;\n      await fetchUploadedFiles();\n    } catch (error) {\n      console.error('Error deleting file:', error);\n      setError('Error al eliminar el archivo');\n    }\n  };\n  const formatFileSize = bytes => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"syllabus-upload-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: \"Debes iniciar sesi\\xF3n para subir y gestionar archivos.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"syllabus-upload-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        className: \"file-input\",\n        onChange: handleFileChange,\n        multiple: true,\n        accept: \".pdf,.doc,.docx,.ppt,.pptx\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"upload-button\",\n        onClick: handleUpload,\n        disabled: uploading || files.length === 0,\n        children: uploading ? 'Subiendo...' : 'Subir Archivos'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 23\n    }, this), files.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"files-queue\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Archivos en cola\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"files-list\",\n        children: files.map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"file-name\",\n              children: file.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"file-type\",\n              children: file.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"file-size\",\n              children: formatFileSize(file.size)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 37\n            }, this), progress[file.name] !== undefined && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-bar\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress-fill\",\n                style: {\n                  width: `${progress[file.name]}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-actions\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"remove-button\",\n              onClick: () => removeFile(index),\n              disabled: uploading,\n              children: \"Eliminar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 17\n    }, this), uploadedFiles.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"uploaded-files\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Archivos subidos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"files-list\",\n        children: uploadedFiles.map(file => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"file-name\",\n              children: file.file_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"file-type\",\n              children: file.file_type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"file-size\",\n              children: formatFileSize(file.file_size)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"a\", {\n              href: file.file_url,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              className: \"view-button\",\n              children: \"Ver\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"delete-button\",\n              onClick: () => handleDelete(file.id),\n              disabled: uploading,\n              children: \"Eliminar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 33\n          }, this)]\n        }, file.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 9\n  }, this);\n};\n_s(SyllabusUpload, \"Ri9e+5QiSrvxoa0NZEsqorSU+CM=\");\n_c = SyllabusUpload;\nexport default SyllabusUpload;\nvar _c;\n$RefreshReg$(_c, \"SyllabusUpload\");","map":{"version":3,"names":["React","useState","useEffect","supabase","jsxDEV","_jsxDEV","SyllabusUpload","subjectId","_s","files","setFiles","uploadedFiles","setUploadedFiles","error","setError","uploading","setUploading","progress","setProgress","isAuthenticated","setIsAuthenticated","checkAuth","fetchUploadedFiles","data","session","auth","getSession","console","log","from","select","eq","handleFileChange","event","selectedFiles","Array","target","validFiles","filter","file","validTypes","includes","type","length","prevFiles","removeFile","index","_","i","handleUpload","sessionError","Error","fileExt","name","split","pop","fileName","Math","random","toString","substring","Date","now","filePath","prev","uploadError","storage","upload","cacheControl","upsert","publicUrl","getPublicUrl","dbError","insert","subject_id","file_name","file_url","file_type","file_size","size","message","handleDelete","fileId","delete","formatFileSize","bytes","k","sizes","floor","parseFloat","pow","toFixed","className","children","_jsxFileName","lineNumber","columnNumber","onChange","multiple","accept","onClick","disabled","map","undefined","style","width","href","rel","id","_c","$RefreshReg$"],"sources":["C:/Users/bruno/Documents/UNIR/TFE/EDUIA/src/components/professor/SyllabusUpload.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { supabase } from '../../config/supabaseClient';\r\nimport './SyllabusUpload.css';\r\n\r\nconst SyllabusUpload = ({ subjectId }) => {\r\n    const [files, setFiles] = useState([]);\r\n    const [uploadedFiles, setUploadedFiles] = useState([]);\r\n    const [error, setError] = useState(null);\r\n    const [uploading, setUploading] = useState(false);\r\n    const [progress, setProgress] = useState({});\r\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n    useEffect(() => {\r\n        checkAuth();\r\n        fetchUploadedFiles();\r\n    }, [subjectId]);\r\n\r\n    const checkAuth = async () => {\r\n        try {\r\n            const { data: { session }, error } = await supabase.auth.getSession();\r\n            console.log('Estado de la sesión:', session);\r\n            if (error) {\r\n                console.error('Error al verificar sesión:', error);\r\n                throw error;\r\n            }\r\n            setIsAuthenticated(!!session);\r\n        } catch (error) {\r\n            console.error('Error checking auth:', error);\r\n            setIsAuthenticated(false);\r\n        }\r\n    };\r\n\r\n    const fetchUploadedFiles = async () => {\r\n        try {\r\n            console.log('Intentando obtener archivos para subjectId:', subjectId);\r\n            const { data, error } = await supabase\r\n                .from('syllabi')\r\n                .select('*')\r\n                .eq('subject_id', subjectId);\r\n\r\n            if (error) {\r\n                console.error('Error al obtener archivos:', error);\r\n                throw error;\r\n            }\r\n            console.log('Archivos obtenidos:', data);\r\n            setUploadedFiles(data || []);\r\n        } catch (error) {\r\n            console.error('Error fetching files:', error);\r\n            setError('Error al cargar los archivos');\r\n        }\r\n    };\r\n\r\n    const handleFileChange = (event) => {\r\n        if (!isAuthenticated) {\r\n            setError('Debes iniciar sesión para subir archivos');\r\n            return;\r\n        }\r\n\r\n        const selectedFiles = Array.from(event.target.files);\r\n        const validFiles = selectedFiles.filter(file => {\r\n            const validTypes = [\r\n                'application/pdf',\r\n                'application/msword',\r\n                'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\r\n                'application/vnd.ms-powerpoint',\r\n                'application/vnd.openxmlformats-officedocument.presentationml.presentation'\r\n            ];\r\n            return validTypes.includes(file.type);\r\n        });\r\n\r\n        if (validFiles.length !== selectedFiles.length) {\r\n            setError('Algunos archivos no son válidos. Solo se permiten PDF, Word y PowerPoint.');\r\n        }\r\n\r\n        setFiles(prevFiles => [...prevFiles, ...validFiles]);\r\n        setError(null);\r\n    };\r\n\r\n    const removeFile = (index) => {\r\n        setFiles(prevFiles => prevFiles.filter((_, i) => i !== index));\r\n    };\r\n\r\n    const handleUpload = async () => {\r\n        if (!isAuthenticated) {\r\n            setError('Debes iniciar sesión para subir archivos');\r\n            return;\r\n        }\r\n\r\n        if (files.length === 0) {\r\n            setError('Por favor, selecciona al menos un archivo');\r\n            return;\r\n        }\r\n\r\n        setUploading(true);\r\n        setError(null);\r\n\r\n        try {\r\n            // Verificar la sesión antes de subir\r\n            const { data: { session }, error: sessionError } = await supabase.auth.getSession();\r\n            if (sessionError) throw sessionError;\r\n            if (!session) throw new Error('No hay sesión activa');\r\n\r\n            // Subir cada archivo\r\n            for (let i = 0; i < files.length; i++) {\r\n                const file = files[i];\r\n                const fileExt = file.name.split('.').pop();\r\n                const fileName = `${Math.random().toString(36).substring(2)}_${Date.now()}.${fileExt}`;\r\n                const filePath = `syllabi/${fileName}`;\r\n\r\n                setProgress(prev => ({ ...prev, [fileName]: 0 }));\r\n\r\n                // Subir archivo al storage\r\n                const { error: uploadError } = await supabase.storage\r\n                    .from('documents')\r\n                    .upload(filePath, file, {\r\n                        cacheControl: '3600',\r\n                        upsert: false\r\n                    });\r\n\r\n                if (uploadError) {\r\n                    console.error('Error al subir archivo:', uploadError);\r\n                    throw new Error('Error al subir el archivo al almacenamiento');\r\n                }\r\n\r\n                // Obtener URL pública\r\n                const { data: { publicUrl } } = supabase.storage\r\n                    .from('documents')\r\n                    .getPublicUrl(filePath);\r\n\r\n                // Guardar en la base de datos\r\n                const { error: dbError } = await supabase\r\n                    .from('syllabi')\r\n                    .insert([\r\n                        {\r\n                            subject_id: subjectId,\r\n                            file_name: file.name,\r\n                            file_url: publicUrl,\r\n                            file_type: file.type,\r\n                            file_size: file.size\r\n                        }\r\n                    ]);\r\n\r\n                if (dbError) {\r\n                    console.error('Error al guardar en la base de datos:', dbError);\r\n                    throw new Error('Error al guardar la información del archivo');\r\n                }\r\n\r\n                setProgress(prev => ({ ...prev, [fileName]: 100 }));\r\n            }\r\n\r\n            await fetchUploadedFiles();\r\n            setFiles([]);\r\n            setProgress({});\r\n        } catch (error) {\r\n            console.error('Error uploading files:', error);\r\n            setError(error.message || 'Error al subir los archivos');\r\n        } finally {\r\n            setUploading(false);\r\n        }\r\n    };\r\n\r\n    const handleDelete = async (fileId) => {\r\n        if (!isAuthenticated) {\r\n            setError('Debes iniciar sesión para eliminar archivos');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const { error } = await supabase\r\n                .from('syllabi')\r\n                .delete()\r\n                .eq('id', fileId);\r\n\r\n            if (error) throw error;\r\n\r\n            await fetchUploadedFiles();\r\n        } catch (error) {\r\n            console.error('Error deleting file:', error);\r\n            setError('Error al eliminar el archivo');\r\n        }\r\n    };\r\n\r\n    const formatFileSize = (bytes) => {\r\n        if (bytes === 0) return '0 Bytes';\r\n        const k = 1024;\r\n        const sizes = ['Bytes', 'KB', 'MB', 'GB'];\r\n        const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n        return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n    };\r\n\r\n    if (!isAuthenticated) {\r\n        return (\r\n            <div className=\"syllabus-upload-container\">\r\n                <div className=\"error-message\">\r\n                    Debes iniciar sesión para subir y gestionar archivos.\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"syllabus-upload-container\">\r\n            <div className=\"upload-section\">\r\n                <input\r\n                    type=\"file\"\r\n                    className=\"file-input\"\r\n                    onChange={handleFileChange}\r\n                    multiple\r\n                    accept=\".pdf,.doc,.docx,.ppt,.pptx\"\r\n                />\r\n                <button\r\n                    className=\"upload-button\"\r\n                    onClick={handleUpload}\r\n                    disabled={uploading || files.length === 0}\r\n                >\r\n                    {uploading ? 'Subiendo...' : 'Subir Archivos'}\r\n                </button>\r\n            </div>\r\n\r\n            {error && <div className=\"error-message\">{error}</div>}\r\n\r\n            {files.length > 0 && (\r\n                <div className=\"files-queue\">\r\n                    <h4>Archivos en cola</h4>\r\n                    <div className=\"files-list\">\r\n                        {files.map((file, index) => (\r\n                            <div key={index} className=\"file-item\">\r\n                                <div className=\"file-details\">\r\n                                    <span className=\"file-name\">{file.name}</span>\r\n                                    <span className=\"file-type\">{file.type}</span>\r\n                                    <span className=\"file-size\">{formatFileSize(file.size)}</span>\r\n                                    {progress[file.name] !== undefined && (\r\n                                        <div className=\"progress-bar\">\r\n                                            <div\r\n                                                className=\"progress-fill\"\r\n                                                style={{ width: `${progress[file.name]}%` }}\r\n                                            />\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                                <div className=\"file-actions\">\r\n                                    <button\r\n                                        className=\"remove-button\"\r\n                                        onClick={() => removeFile(index)}\r\n                                        disabled={uploading}\r\n                                    >\r\n                                        Eliminar\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {uploadedFiles.length > 0 && (\r\n                <div className=\"uploaded-files\">\r\n                    <h4>Archivos subidos</h4>\r\n                    <div className=\"files-list\">\r\n                        {uploadedFiles.map((file) => (\r\n                            <div key={file.id} className=\"file-item\">\r\n                                <div className=\"file-details\">\r\n                                    <span className=\"file-name\">{file.file_name}</span>\r\n                                    <span className=\"file-type\">{file.file_type}</span>\r\n                                    <span className=\"file-size\">{formatFileSize(file.file_size)}</span>\r\n                                </div>\r\n                                <div className=\"file-actions\">\r\n                                    <a\r\n                                        href={file.file_url}\r\n                                        target=\"_blank\"\r\n                                        rel=\"noopener noreferrer\"\r\n                                        className=\"view-button\"\r\n                                    >\r\n                                        Ver\r\n                                    </a>\r\n                                    <button\r\n                                        className=\"delete-button\"\r\n                                        onClick={() => handleDelete(file.id)}\r\n                                        disabled={uploading}\r\n                                    >\r\n                                        Eliminar\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SyllabusUpload; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}